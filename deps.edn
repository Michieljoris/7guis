;; The deps.edn file describes the information needed to build a classpath.

;; https://clojure.org/guides/deps_and_cli
;; https://clojure.org/reference/deps_and_cli
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{
 ;; Paths
 ;;   Directories in the current project to include in the classpath

 :paths [
         "src"
         "src-libs"
         "src-styling"
         "resources" ;;public dir for server and config files
         ]

 ;; External dependencies

 :deps {org.clojure/clojure {:mvn/version "1.10.1"}

        ;; Html clojure style
        sablono {:mvn/version "0.8.4"}  ; Optional, just for HTML

        ;; Environment variables
        environ {:mvn/version "1.1.0"}

        ;; Util libs
        funcool/cuerdas {:mvn/version "2.0.5"}

        ;; Logging ==========================
        com.taoensso/timbre      {:mvn/version "4.10.0"}
        com.taoensso/encore      {:mvn/version "2.106.0"}
        ring-logger-timbre {:mvn/version "0.7.6"}
        ;; http://ioavisopretty.readthedocs.io/en/0.1.21/
        io.aviso/pretty {:mvn/version "0.1.37"  }
        jansi-clj {:mvn/version "0.1.1"}

        integrant {:mvn/version "0.8.0"}
        integrant/repl {:mvn/version "0.3.1"}

        http-kit {:mvn/version "2.3.0"}

        ;;Updating this to 1.7.1 crashes figwheel server
        ring                      {:mvn/version "1.6.3"}
        bidi {:mvn/version "2.1.5"}
        ring/ring-defaults        {:mvn/version "0.3.2"} ; Includes `ring-anti-forgery`, etc.
        ring-cors {:mvn/version "0.1.13"}
        ring/ring-json {:mvn/version "0.4.0"}
        clj-bugsnag {:mvn/version "0.2.9"}

        ;; Bcrypt for use with passwords
        crypto-password {:mvn/version "0.2.0"}

        com.layerware/hugsql {:mvn/version "0.4.9"}

        clojure.jdbc/clojure.jdbc-c3p0 {:mvn/version "0.3.3"}
        org.clojure/java.jdbc {:mvn/version "0.7.8"}
        mysql/mysql-connector-java {:mvn/version "5.1.47"
                                    ;; "8.0.15"
                                    }

        com.taoensso/sente {:mvn/version "1.13.1"}






        ;; pandect {:mvn/version "0.6.1"}

        ;; ring/ring-mock {:mvn/version "0.3.2"}
        ;; ring.middleware.conditional {:mvn/version "0.2.0"}
        ;;AUM deps


       
        
        ;; org.clojure/core.async {:mvn/version "0.4.490"
        ;;                         :exclusions [org.clojure/tools.reader]}
        ;; org.clojure/tools.deps.alpha {:mvn/version "0.8.677"
        ;;                               ;;tools.deps includes this nop, which
        ;;                               ;;creates multiple bindings for slf4j if
        ;;                               ;;you include another binding like logback-classic
        ;;                               :exclusions [org.slf4j/slf4j-nop]}

        ;; org.omcljs/om {:mvn/version "1.0.0-beta4" :exclusions [cljsjs/react
        ;;                                                        cljsjs/react-dom]}


        ;; com.cognitect/transit-clj  {:mvn/version "0.8.313"}

        ;; HTML as data
        ;; hickory {:mvn/version "0.7.1"}
        
        ;; cljsjs/react {:mvn/version "16.0.0-0"}
        ;; cljsjs/react-dom {:mvn/version "16.0.0-0"}

        ;; org.clojure/data.json  {:mvn/version "0.2.6"}

        ;; Testing -----------------------
        ;; https://github.com/juxt/iota
        ;; juxt/iota {:mvn/version "0.2.3"  } ;Infix Operators for Test Assertions, copied to bilby.test.iota
        ;; org.clojure/test.check {:mvn/version "0.9.0"} ;; only if you need generators
        ;; eftest {:mvn/version "0.5.4"  }
        ;; https://github.com/nubank/matcher-combinators
        ;; nubank/matcher-combinators {:mvn/version "0.6.1"  }
        ;;https://clojure-expectations.github.io/
        ;; expectations {:mvn/version "2.2.0-rc3"  }
        ;; pjstadig/humane-test-output {:mvn/version "0.9.0"  }
        ;; https://github.com/GreenPowerMonitor/test-doubles
        ;; greenpowermonitor/test-doubles {:mvn/version "0.1.2"  }
        ;; https://github.com/walmartlabs/test-reporting
        ;; com.walmartlabs/test-reporting {:mvn/version "0.1.0"  }

        ;; Dev ---------------------------
        ;; https://github.com/vvvvalvalval/scope-capture
        ;; vvvvalvalval/scope-capture {:mvn/version "0.3.2" }
        ;; devcards-om-next {:mvn/version "0.3.0" :exclusions [cljsjs/react
        ;;                                                     cljsjs/react-dom]}
        ;;Visual repl and testing
        ;; devcards {:mvn/version "0.2.6" :exclusions [cljsjs/react cljsjs/react-dom
        ;;                                             org.clojure/clojurescript]}

        ;;Slamhound rips your namespace form apart and reconstructs it.
        ;; slamhound {:mvn/version "1.5.5"}
        ;; nightlight {:mvn/version "2.3.2"  }

        ;; Util -----------------------------
        ;; camel-snake-kebab {:mvn/version "0.4.0"}
        ;; cheshire {:mvn/version "5.8.1"}
        ;; Json but better
        ;; prismatic/schema {:mvn/version "1.1.10"}
        ;; org.clojure/data.csv {:mvn/version "0.1.4"}
        ;; clj-time {:mvn/version "0.15.1"}


        ;; Network -----------------------
        ;; clj-http {:mvn/version "3.9.1"} ;;Sees to be needed for bugsnag-clj.
        ;;Otherwise clj-http.headers ns can't be
        ;;found?!?!
        ;; ;; Websockets
        ;; com.taoensso/sente {:mvn/version "1.13.1"}
        ;; Webserver routing
        ;; bidi {:mvn/version "2.1.5"}
        ;; Request and response handling
        ;;Updating this to 1.7.1 crashes figwheel server
        ;; ring                      {:mvn/version "1.6.3"}
        ;; ring/ring-defaults        {:mvn/version "0.3.2"} ; Includes `ring-anti-forgery`, etc.
        ;; ring-cors {:mvn/version "0.1.13"}
        ;; ring/ring-json {:mvn/version "0.4.0"}

        ;; ring/ring-mock {:mvn/version "0.3.2"}
        ;; ring.middleware.conditional {:mvn/version "0.2.0"}

        ;; SQL ==============================
        ;; Sql queries
        ;; mysql/mysql-connector-java {:mvn/version "5.1.47"
        ;;                             ;; "8.0.15"
        ;;                             }

        ;; mysql/mysql-connector-java {:mvn/version "5.1.43"}
        ;; mysql/mysql-connector-java {:mvn/version "6.0.5"} ;breaks code
        ;; TODO: maybe use https://funcool.github.io/clojure.jdbc/latest/ ?
        ;; org.clojure/java.jdbc {:mvn/version "0.7.8"}
        ;; https://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.clojure%22%20AND%20a%3A%22java.jdbc%22
        ;; org.clojure/java.jdbc {:mvn/version "0.3.7"}
        ;; org.clojure/java.jdbc {:mvn/version "0.5.8"}
        ;; For db connection pooling
        ;; TODO: maybe use https://funcool.github.io/clojure.jdbc/latest/#c3p0 ?
        ;; clojure.jdbc/clojure.jdbc-c3p0 {:mvn/version "0.3.3"}
        ;; org.postgresql/postgresql {:mvn/version "9.4-1212-jdbc41"}
        ;; postgresql {:mvn/version "9.3-1102.jdbc41"}
        ;; com.layerware/hugsql {:mvn/version "0.4.9"}
        ;; yesql {:mvn/version "0.5.3"}



        ;; Manage lifecycle of services ===========================
        ;; mount {:mvn/version "0.1.16"}
        ;; tolitius/mount-up {:mvn/version "0.1.2"}
        ;; Alternative to hooke I think. Up and down events useable to print info
        ;; https://github.com/tolitius/mount-up/blob/master/src/mount_up/core.clj
        ;; robert/hooke {:mvn/version "1.3.0"} ; logging for mount

        ;; Bcrypt for use with passwords
        ;; crypto-password {:mvn/version "0.2.0"}
        ;; pandect {:mvn/version "0.6.1"}

        ;;Web app
        ;; Ajax
        ;; cljs-http {:mvn/version "0.1.46"}
        ;; cljs-ajax {:mvn/version "0.8.0"}

        ;; CSS
        ;; https://github.com/sass/sassc
        ;; https://github.com/Deraen/sass4clj
        ;; garden {:mvn/version "1.3.6"}

        ;; markdown-clj {:mvn/version "1.0.7"}

        ;; Memory database a la datomic
        ;; datascript {:mvn/version "0.17.1"}


        ;;MISC ===============================
        ;; differ {:mvn/version "0.3.2"}

        ;; yleisradio/new-reliquary {:mvn/version "1.1.0"} ;or: ??
        ;; com.climate/clj-newrelic {:mvn/version "0.2.1"}
        ;; com.newrelic.agent.java/newrelic-api {:mvn/version "4.2.0"}

        ;; me.raynes/conch {:mvn/version "0.8.0"}

        ;; dev dependencies
        ;; net.cgrand/unrepl {:MVN/VERSION "0.1.0-SNAPSHOT"}

        ;;repl interactive data structure inspector
        ;; datawalk {:mvn/version "0.1.12"}

        ;; Event-store streaming library (rx streams)
        ;; funcool/beicon {:mvn/version "4.1.0"}

        ;;Like clojure.inspector:
        ;; inspector-jay {:mvn/version "0.3"}
        ;; proto-repl {:mvn/version "0.3.1"}
        ;; orchestra {:mvn/version "2019.02.06-1"}
        ;; expound {:mvn/version "0.7.2"}
        ;; com.taoensso/carmine {:mvn/version "2.19.1"}

        ;; gnl/ghostwheel {:mvn/version "0.2.3"}
        ;;TODO: Following two are handy, but muck up prod build. Move to profile.boot as a first step
        ;;Need to find way to only require and use dep in dev build
        ;; https://github.com/binaryage/cljs-devtools/blob/master/docs/installation.md#advanced-builds
        ;; https://github.com/philoskim/debux/issues/1
        ;; https://github.com/philoskim/debux
        ;; philoskim/debux {:mvn/version "0.4.2"}
        ;; https://github.com/anmonteiro/plomber
        ;; plomber {:mvn/version "0.1.0"}
        ;; data-to-html {:mvn/version "0.1.2"}

        ;; com.taoensso/tufte {:mvn/version "2.1.0"}
        }

 ;; Aliases
 ;;   resolve-deps aliases (-R) affect dependency resolution, options:
 ;;     :extra-deps - specifies extra deps to add to :deps
 ;;     :override-deps - specifies a coordinate to use instead of that in :deps
 ;;     :default-deps - specifies a coordinate to use for a lib if one isn't found
 ;;   make-classpath aliases (-C) affect the classpath generation, options:
 ;;     :extra-paths - vector of additional paths to add to the classpath
 ;;     :classpath-overrides - map of lib to path that overrides the result of resolving deps

 :aliases {:revolt {
                    :extra-deps {
                                 defunkt/revolt {:mvn/version "1.2.0"}
                                 deraen/sass4clj {:mvn/version "0.3.1"}
                                 }
                    :main-opts   ["-m" "pagora.revolt.bootstrap"
                                  "-c" "revolt.edn"]}
           :nrepl {:extra-deps {
                                ;; nrepl -------------------
                                com.cemerick/pomegranate {:mvn/version "1.1.0"}
                                cider/cider-nrepl {:mvn/version "0.22.2"}
                                refactor-nrepl {:mvn/version "2.5.0-SNAPSHOT"}
                                }}

           :figwheel  {:extra-deps {com.bhauman/figwheel-main {:mvn/version "0.2.3"}
                                    com.bhauman/rebel-readline {:mvn/version "0.1.4"}
                                    }
                       :extra-paths ["target/assets"
                                     "src-dev/dev/cljs"
                                     ]
                       }
           :git-deps {
                      :override-deps {
                                      clojure-utils {:git/url "git@github.com:michieljoris/clojure-utils"
                                                     :sha "ef287398e23c18ee55dd5611f44a98bd0c0c8027"
                                                     :mvn/version "0.0.0"
                                                     }

                                      aum {:git/url "git@github.com:michieljoris/aum-next"
                                           :sha "0efcde35d29fc0a72876f46a87a80f9ba25967e9"
                                           :mvn/version "0.0.0"
                                           }
                                      }

                      }

           :local-deps {
                        ;; :override-deps {
                        ;;                 clojure-utils {:local/root "../../clojure-utils"
                        ;;                                :mvn/version "0.0.0"
                        ;;                                }

                        ;;                 aum {:local/root "../../aum"
                        ;;                      :mvn/version "0.0.0"
                        ;;                      }

                        ;;                 }
                        }

           :dev {:extra-deps  {
                               ;; dev tools-----------------------
                               com.bhauman/figwheel-main {:mvn/version "0.2.3"}
                               cider/piggieback {:mvn/version "0.4.0"}
                               weasel {:mvn/version "0.7.0"
                                       :exclusions [org.clojure/clojurescript]}
                               fipp {:mvn/version "0.6.17"}

                               }
                 ;;This is where compiled assets suc as cljs and scss go. So for
                 ;;the server to find them target/assets needs to be added to the
                 ;;classpath:
                 :extra-paths ["target/assets"
                               "src-dev/dev/clj"
                               ;; "src/dev/cljs"
                               "src-dev/test"
                               ]
                 }

           ;; :revolt-plugins {:extra-deps {revolt-plugins {:local/root "/home/michieljoris/src/clojure/playground/revolt-plugins"}}
           ;;                  ;; :main-opts ["-m" "nrepl2"]
           ;;                  }
           ;;1.10.520 gives error in _meta.js: META is not defined
           :cljs {:extra-deps  {org.clojure/clojurescript {:mvn/version"1.10.597"
                                                           :exclusions [org.clojure/clojure
                                                                        org.clojure/data.json]}
                                ;; CLJSJS ================================================================
                                ;; cljsjs/crypto-js {:mvn/version "3.1.9-1-0"}
                                ;; cljsjs/react-datetime {:mvn/version "2.14.0-0" :exclusions [cljsjs/react
                                ;;                                                             cljsjs/react-dom]}

                                ;; cljsjs/moment {:mvn/version "2.24.0-0"}
                                ;; cljsjs/enquire {:mvn/version "2.1.2-0"}
                                ;; com.andrewmcveigh/cljs-time {:mvn/version "0.5.2"}

                                binaryage/devtools {:mvn/version "0.9.10"}
                                binaryage/dirac        {:mvn/version "1.3.2"  }
                                ;; cljsjs/dropzone {:mvn/version "4.3.0-0"}
                                ;; cljsjs/react-color {:mvn/version "2.13.8-0"}
                                ;; Drag and drop
                                ;; js lib directly include now, see dev.cljs.edn and prod.cljs.edn
                                ;; cljsjs/dragula {:mvn/version "3.6.8-1"} :exclusions [cljsjs/react cljsjs/react-dom]
                                ;; cljsjs/react-drag {:mvn/version "0.2.7-0"}
                                ;; herb {:mvn/version "0.7.2"}
                                ;; org.clojars.mmb90/cljs-cache {:mvn/version "0.1.4"}

                                }}

           :slf4j {:extra-deps {
                                ;;This lib reroutes slf4j log output to timbre. To use this and
                                ;;configure it in time probably need to add/make a task for revolt that
                                ;;sets the level early enough. Setting it on cmd doesn't seem to work:
                                ;;export TIMBRE_LEVEL=:info
                                ;;com.fzakaria/slf4j-timbre {:mvn/version "0.3.12"}
                                ;;This uses config in resources/logback.xml
                                ch.qos.logback/logback-classic {:mvn/version "1.2.3"}
                                }}

           ;; dependencies for packaging tasks
           :pack {:extra-deps {co.paralleluniverse/capsule {:mvn/version "1.0.3"}
                               co.paralleluniverse/capsule-maven {:mvn/version "1.0.3"}}
                  :main-opts   ["-m" "pagora.revolt.bootstrap"
                                "-c" "revolt.edn"]}

           ;; Tool to simplify workflow with Git-based Clojure dependencies
           ;; using clojure.tools.deps
           ;; https://github.com/omnyway-labs/vulcan
           :vulcan {:extra-deps
                    {omnyway-labs/vulcan
                     {:git/url "https://github.com/omnyway-labs/vulcan.git",
                      :sha "577daf362c3f81e08d43f654ef0bbf3ddc93e015"
                      :tag "master"}},
                    :main-opts ["-m" "vulcan.main"],
                    :jvm-opts
                    ["-client"
                     "-XX:+UseSerialGC"
                     "-XX:CICompilerCount=1"
                     "-XX:+TieredCompilation"
                     "-Xshare:off"
                     "-Xverify:none"
                     "-XX:TieredStopAtLevel=1"]}

           }

 ;; Provider attributes

 ;; :mvn/repos {
 ;;   "central" {:url "https://repo1.maven.org/maven2/"}
 ;;   "clojars" {:url "https://repo.clojars.org/"}
 ;; }
 }
