* branches
chin: admin-templates
- only has migration sofar
dc-admin:
- templates-deps-edn
  uses revolt and deps tooling iso boot, latest templates branch
  use as source to get full functionality back for templates branch
- templates-joins, built on from-scratch which is templates-deps-edn
  minimal templates branch, copied from templates-deps-edn
  uses join tables as entities!!
  so we can use save-mods and mutate history
- templates-joins-dialogs
  merged with templates-users-admin branch
  start up with:
  DB_NAME=chin_dev bin/backend
  and in other terminal:
  bin/figwheel
  dnd works
- templates-joins-dialogs
  merged with templates-users-admin branch
- templates-joins-dialogs-all-qbuckets
  questions as qbuckets
- templates (WORKING BRANCH)
  start up with:
  DB_NAME=chin_dev bin/backend
  and in other terminal:
  bin/figwheel
  dnd works
  branched off from templates-joins-dialogs-all-qbuckets
  -> questions are qbuckets as well
  -> uses many-many joins
  -> has all admin pages
  -> merged with templates-users-admin branch
  -> merged better-duplicate-email-handling
  -> has calc-count branch functionality of course
   but might have to discard src-bilby and src/cljs dirs on merge from
  release_master in case calc-count gets merged with release-master before
  templates goes live.



* Now what????!!!!!????
And not to discuss further now, but something to plan and discuss at one point,
at least to get things clear in my head: This order thing in general. We have
templates, categories and questions. Relations between them. They can be
many-to-many and belongs-to. And we'd like to be able to order them in relation
to what they're joined to. And we're dealing with a legacy system forced on us
by how T&T works. And a kinda broken implementation of order, as we see now.
Lucas, and Johnny, we've been talking about how to organise this properly for
the new admin. I think it'd be an idea to formalize this, properly hash out how
to organize this all, also on a technical level so that we all talk about the
same thing. This also relates to copying and cloning. Meaning, when and how do
we want changes to propagate to their clones. I can think up a structure that
would be technically the best, but might not be best in terms of solving our
business problems/requirements, as I understand from talking to you. I also
might be solving problems that as you say we don't have. Getting this clear will
also enable me to get a proper handle on finishing the template feature. It has
been a bit of a blocker tbh cause my (technically) ideal implementation is
perhaps more than is needed. The other approach is to change (almost) nothing
and completely work around what we have now, which is quite workable, and just
have a clever ui to hide that things might work a bit differently under the
hood. But this has also obviously some disadvantages. It might give problems
down the road. Or take a middle road. But what middle road. Which is where I'm
at now.

#+FILETAGS: @work BILBY templates
* Policies
** Keep deploying templates branch. So make sure app stays table still!!
- Just keep deploying so release_master stays up to date!!!!
- Only allow DC group edit their group owned templates, till confident, then
  open to more groups.
- Any refactoring/editing/changes that are not related to the templates page
  itself need to be thoroughly thought throug, documented and tested. Manually and
  automated.
- Same applies to DC app. Importing from tent should always keep working and a
  group should be able to revert to the tent system of doing things. This means
  they lose their edits in their own templates though. Would that work?

** phase in per group and using tent and templates editor at the same time
  Add a supergroup switch to a group that allows migrating, and/or add a (supergroup)
  button that actually migrates templates/categories/questions to a group. So
  copies them. From then on they use the new system and can use bilby to edit
  their templates. If new templates come in from tent they can again be
  imported. So we can even have only categories and questions for a group!!
  Problem is only that DC app needs to selects the templates differently. So
  from the group, which means then categories (flagged as template). Also
  creating a checklist (so all answers) will work a bit different in backend.
  And the extra categories are now not from the 'extra' templates but just
  categories linked to the template but flagged as 'extra'.
** DONE load-data
No issue when loading existing data for one record
Just get the query from the component the transaction is happening in.
Query looks like


#+BEGIN_SRC clojure
  {:template [:id :name :&comments :&tags
              {:&category [:id :name :&tags
                           {:|question [:id :question :&type :&priority]}]}]}
#+END_SRC

This cmp would typically host a list of templates.

Props prefixed with & get ignored by regular parser, or will be

#+BEGIN_SRC clojure
  (om/transact! this [(load {:key :template :id 1})])
  (om/transact! this [(load-join {:path [:template :category] :id 1})])
#+END_SRC

Transaction would do a om/get-query on this.

And then get get the join with the key :template, then the subquery for that, so

#+BEGIN_SRC clojure
  [:id :name :&comments :&tags {:&category [:id :name :&tags
                                            {:&question [:id :question :&type :&priority]}]}]
#+END_SRC


Remote query would be, with only props omitted that are not loaded already, from
all props for query, including the ones prefixed with &. But if a key is a join,
only load again the props not prefixed with &:

#+BEGIN_SRC clojure
  [{:load-record [({:template [:id :comments :tags
                               {:category [:id :name ]}]}
                   {:where [:id := 1]})]}]
#+END_SRC

This'll put the data under the load-record key in app state. with

:template/by-id key update to

#+BEGIN_SRC clojure
  {:1 {:id 1 :name "foo" :comment [] :tags [] :category
       [:category/by-id 1]}}}

#+END_SRC

updated.

This is enough to update the record. No post-remote needs to be used.

If a a thing like load-join is needed, meaning, let's say none of the join's
records have been loaded yet, we can use om/path on the cmp's current props to
find out where to splice in the join's data in the post-remote

- selected-item
 Remove selected-item fns from parser, instead use & prefixed props and
  load-data when somebody selects a record in the list on the left.
And make sure when we fullfil a query from app-state that we remove all &'s from
the cmp's query props. Before doing a om/tree->ui call for example.

- paging
At the moment I load a page. Which ends up in the ui-tree. On loading new page I
move this to page-state's loaded-pages key. And I've got a
item-batch read method that concatenates all new records with loaded-pages and
whatever is in the ui-tree.

In load data you could in the post-remote concat the loaded record idents to the
idents list in the ui-tree.
Also when creating new record, add that to front of existing idents in ui-tree.


* TODO DC app
** DONE In read.cljs in app/locale set default-remote to true iso false
This is in the templates-users-admin-page PR
** Make statuses pull request
**** Bilby TODO
***** Backend
****** DONE Update/save statuses
     CLOSED: [2018-09-26 Wed 10:29]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 10:29]
****** DONE rename existing dossier/checklist statuses
     CLOSED: [2018-09-26 Wed 10:29]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 10:29]
****** DONE Send message when delete status fails, and set query.
     CLOSED: [2018-09-26 Wed 11:24]

     - State "DONE"       from "TODO"       [2018-09-26 Wed 11:24]
*****   Frontend
****** DONE set default statuses (depending on locale) to Open and Afgerond
     CLOSED: [2018-09-26 Wed 12:35]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 12:35]
     on creation of dossier type, look up translation of Open and Complete in current locale for app?
****** DONE don't allow less than 2 statuses
     CLOSED: [2018-09-26 Wed 11:44]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 11:44]
    Don't allow deleting if 1 or less statuses. Validate in backend
****** DONE don't make new statuses that are deleted!
     CLOSED: [2018-09-26 Wed 12:47]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 12:47]
****** DONE Add validation in backend for number of statuses!!
     CLOSED: [2018-09-26 Wed 13:49]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 13:49]
****** DONE validate in frontend empty statuses!!!
     CLOSED: [2018-09-26 Wed 13:57]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 13:57]
****** DONE standardize statuses when cloning etc!!
     CLOSED: [2018-09-26 Wed 14:03]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 14:03]
****** DONE Renaming existing status to another existing status should not be possible
     CLOSED: [2018-09-26 Wed 14:04]
     - State "DONE"       from "TODO"       [2018-09-26 Wed 14:04]
****** DONE Setting all inactive leaves nothing to select in DC app, ah well.
** CANCELLED OBSOLETE Fix UserTemplatesUpdateWorker
so supergroup users can update subgroup users.
** DONE Improve templates users PR
- DONE Add group and function info. Add field to users: function.
- DONE Filter on function by adding separate search filter. Add search filter for group
as well.
- DONE Only load templates linked to the group via templates-users table
** DONE Add multiple choice dossier field dropdown
- Display value properly in dashboard and pdfs
** DONE Create calc question type.
- Smooth out ui.
- How does calc question com from Effacts?, Adapt importworke

* Lucas requests
** gov api key for dossier type fields
There's a new API standard for Dutch cities
We need something like fixed API keys for dossierfields
They gave everything an exact name
zaakIDNummer
things like that
https://catalogi-api.vng.cloud/api/v1/schema/#operation/besluittype_create

So you'd want to assign an api key like "zaakIDNummer" to a field. Int he dossier type editor for instance.
Make standard dossiertypes that the can change but just not the API keys
But still give it a custom name for use in the app.
In Effacts you had an API key field for each subject field
The other option would be ‘mirroring’ fields into hidden fields (edited)
So idea is: create any field you want for a dossier type, name them anything you like. But if you want to interact with gov api you can stick an api key to the fields.
And one on one.
your hidden fields help to of course and we need to think about protecting these fields
The mirroring might be an idea. Since otherwise you have to tell all the other software everywhere to take not of the extra 'gov-api-key' column on the field record.
When exporting a dossier to the gov they can just ignore all the other fields and just take note of the 'officially' named fields.
We are confronted with it because of Hoorn at the moment
** Proposal
Well, if you bring up the template editor. This is my thoughts on that:

The template-editor branch contains not only the template editor but is in some
ways also the next version of bilby. It use different tooling (not boot or
leiningen but Clojure CLI), has much easier to understand frontend parser and
overall lots of improvements over the current production admin bilby.

The current bilby production repo currently not only serves as the backend for
the admin but also for the workload, dashboard and notifications. The two
backends have not much to do with each other, apart from using the same
webserver and have been developed in parallel. They share very few namespaces
and functionality. However they do have a potential to create problems and bugs
just by running in the same process. One bug we've had was the sql/joda datetime
clash for example. The admin backend is rather static in development and is in
some ways 'finished'. And to redeploy it every time the
dashboard/workload/notifications backend gets a bug fix or feature added makes
no sense. The admin backend does also not benefit from any such update or bugfix
since it's orthogonal to the regular rest backend.

On the other hand, any features, bug fixes for the admin in the current admin
bilby production branch have to be merged forward into the template branch to
keep it up to date. Which is not always easy since they diverge sometimes in
ways that make conflicts very likely, which makes me hesitant to modify it.

I propose we split off the template editor branch from the current production
bilby repo and develop it separately, and also, in time, deploy it separately.
This way the current bilby repo can be developed and redeployed to serve the
needs of dashboard/workload/notifications, it can keep using Boot tooling, or
revert to Leiningen tooling, whatever suits. It can also still serve some kind
of frontend of course. It can be optimized for backend operations that are
demanding in terms of resources, cpu etc. Logging will not be 'contaminated'
with admin backend logging/errors etc.

The admin backend is in essence a very lightweight websocket backend for a
subset of users (admins) and the expectation is not that it will need a resource
heavy, powerful backend, at least not for the foreseeable future.

There's probably more reasons to separate the two branches into two repos, but I
think they will all fall under the principle of modularity and decoupling. If
two pieces of functionality are independent and serve different purposes they
should not share or overlap, they will just end up messing with each other at
some point.

I propose we incorporate the current outstanding admin feature branches in to
the current production bilby branch but halt any more feature developments till
the template editor branch can be brought online. This does not have to wait for
the template editor to be finished, but only for the template editor branch to
get parity in terms of stability with current production admin. Because it works
somewhat differently the app needs a thorough going through to make sure
everything works as it should. Bringing the current feature branches (event
store, export csv, subscriptions etc) into template editor branch will also be
somewhat time consuming, but is still overseeable as it stands now. By the
time current features branches are 'live', the template editor branch should be
ready and stable enough to be deployed and should have parity in functionality.

However, if we separate the branches I need to be team lead on the admin
project. It's hard to create a project from scratch, maintain and keep
developing it if I don't have the last say, when it all comes down to it, on how
that's done. I'm the most knowledgeable on the project, I know where I want the
project to be headed, technically. That's not to say that we shouldn't have
discussions, code reviews etc, and also lots of documentation to induct other
programmers. However, it would be very hard for to work on the admin if I wasn't
in control of it. It's paralyzing and slows everything down very much if I have
to anticipate and counter every possible objection and argument that may arise,
which, tbh, don't always, in my opinion, come from a place of super expertise
and knowledge and wisdom and experience. Causing potentially needless work to be
done, and causing, to be frank, resentment, to then have to implement stuff on
my own project which I don't agree with.

I've worked on the admin now for 3-4 years, it's run stable, it's adaptable, the
logic is clear, there's a huge potential for further development. There needs to
be a moment where I need to get more control and authority and autonomy over
software I make and the work I do. I need to move on and grow somehow,
professionally, and this is one way.

Alternatively, I help getting the current feature branches to come online, I can
fix bugs, develop other minor features in the mean time, but then after that I
don't see a way forward for me tbh in the long run.

One more thing. If we're gonna sell DC licenses in Oz there's now way we can
sell them Effacts into the package. I don't see that happening. They will have
to be able to create their own templates, easily.


Hi guys. Here's my bit. Not much to report so far, it's been a crap past few
weeks to say the least, but trying to get back into it. There's a bunch of
feature branches for bilby in the pipeline. I'll be working on them to get them
into production, incorporating feedback and review. Jacob's got something he
wants to fix for password expiry, so will discuss that with him and fix that.
Then, will be studying the STTR spec somewhat, see if I can make sense
of it.




**  DONE the link from Admin back to the app (in the menu top-right) takes you back to the homepage instead of the app
** DONE Fix prod: scope of search of templates to link is too narrow!!!
Probably scope is set to group. But it should be set to 'all groups' !!!
NOTE: can't find bug, all seems to be working ok
** Test staging env

   This  is going to be the first time that bilby has several environments in staging. Right now, bilby contains “consumers” that generate information for the dashboard and workload.
Right now they are deactivated in dev and active in prod. I was wondering if you can modify the environments so they are also deactivated by default in staging. We don’t want the consumers working at the same time in different places.
It’s a variable called inactive-workers on the config.
Michiel van Oosten  Yes, ok, there's a staging config which is set to the prod config atm. I'll flesh that out and make sure it works in a staging env. When clj-env == staging.
Jacob Mendoza  Thanks so much Michiel
If you can send that in a different PR I’d appreciate
Michiel van Oosten  Should work already, but never tested it I think. There might be other places where the env is checked for it being prod or not.  Even when staging clj-env key is set to prod. Shouldn't be the case, but I'll check.
** STAGE! 6.admin DONE user-on-off-switch-v2
*** DONE Alle switches flippen when setting user to off en lichter font when off
*** DONE Make sure all admins have last_updated-by/created-by column
In any case, created-by for users!!!!

** 2.STAGE! admin DONE  template-user-v2
*** Push latest
*** DONE paging doesn't work!!!
*** DONE Exclude linked templates from undo/redo/revert mechanism!!!
*** DONE templates hebben geen actief flag. Wel entry-at en expired-at, dat bedoel je denk ik. Kan een filter toevoegen daarop gebaseerd dan.
Dus by default filteren op vandaag. Met misschien de optie om de filter datum te zetten?
*** DONE on-page-change wipe linked entity from master ident.
and set page in page-state. That should trigger the fetching of
the new page.
*** DONE Set pages for linked and search properly to 0!
When opening dialog. When going from linked to search and back.
*** DONE ctrl + v = Toon gekoppelde templates en een zoekbalk. Zoek een template en toon matches.
Laat zien welke wel en niet zijn gekoppeld en zo gauw als je een niet
geselecteerde template aanvinkt een knop Toevoegen tonen.
ctrl-v is makkelijk. En zoeken meteen maar in alle templates begrijp ik. Alle gekoppelde templates worden nu ook al in grijs getoond. En dus knop "Toevoegen" tonen als je het aanvinkt. Ipv dus aparte "zoek modus".
Lucas Oost Lievense

ja dat kan allemaal op die pagina
Dat is eigenlijk wat je doet
Heeft deze persoon deze templates? je ziet dan welke wel en welke niet en kan die ontbrekende direct toevoegen


** 8.admin DONE:admin/chin:link-dossier-types-to-templates
*** Push latest
*** Built on template-user-v2
*** DONE Exclude linked templates from undo/redo/revert mechanism!!!
*** DONE Implement paging for search result in link-entity dialog
*** DONE Add link-entity-dialog dossier-types--templates
*** Done. Link from templates to dossier types?? No for now
*** DONE in chin: update ui for selection of templates on "New checklist"








** STAGE 3.admin DONE export-active-accounts
*** DONE sorting on prop doesn't work if it's not included in query!!!
*** DONE Add an export option (csv/excel) for selected accounts (i.e. all accounts, all active accounts or al inactive accounts)
  add export button to all admin pages!!!
  https://jsfiddle.net/ourcodeworld/rce6nn3z/2/?utm_source=website&utm_medium=embed&utm_campaign=rce6nn3z

*** Set/add custom names for columns??
Add suggested default names (maybe translations?) and let user set columns
names, persist in local storage.
*** Make PR

** 7 admin FINISH init-event-store Initialize event store, and add history button for records
- TODO: travis tests are failing, Not connecting to sql
- DONE write init events, idempotentally
- DONE wrap sql queries in transaction
- DONE write events atomically!!!
- DONE when record is created or updated the updated-at and created-at isn't added, ah well
- Paging for side bar events
- Add 0.1.17 tag to dc-util
- ??? There's a bug where the backend doesn't retrieve the user join in an event.
- DONE write updated-at and created-at like we do here in general, not using mysql NOW() anymore.

- LATER show history of field of a record (double click on label or something?, hover over and show history icon?)
- LATER update history, if showing on updates. Just load events from a certain sequence no, and add them to the list..
- LATER or better, in overlay dialog for various admin tables.
- DONE retrieve all events for a record, and show in dialog.
- DONE add event admin page, filter on event type, date range, regex on column fields etc




** 5.admin PROPOSAL DONE:admin:calc-active-users
*** DONE Finish subscription table config
*** DONE Make proposal for subscription table
Think I've found a way to implement active users counting in bilby without having to modify rails immediately. So the source of truth for 'active' will be still the deleted flag on user for now. I just use the subscription table to record changes to that deleted column. Then, in time we can switch the authorization mechanism in bilby and rails to looking at the subscription table, and not the deleted flag anymore. Which will enable the feature of setting users active "from" a date, and potentially "to" a date. Which will need some ui changes in admin. So not a toggle for active/inactive, but two fields, active from and to (entry_at and expired_at).
So no changes needed to the event store for now, necessarily. And the whole thing can be introduced in steps.
Putting the database config for subscription together atm, which in effect is the spec for that table and what you can do with it. Should be pretty self explanatory.
So idea is: when user flips the deleted toggle in the frontend, that gets recorded as usual. But in the backend I also update the subscription table. I'll try to do that atomically.
So on for the first time -> entry-at="2019-07-22, expired-at=null
Then turn off: entry-at=entry-at="2019-07-22, expired-at="2019-07-25"
Flip on couple days later again: New entry: entry-at="2019-07-27, expired-at=null
Then turn off couple days later:entry-at="2019-07-27, expired-at="2019-07-29"
Flip on again that same day: entry-at="2019-07-27, expired-at=nullFlip on and then off again on same day: entry-at="2019-07-22, expired-at="2019-07-22" (edited)
Etc.
The idea is not to make a new record when subscription is in the past. Otherwise make a new one. And to never modify a subscriptin that's expired. (edited)
Since it's our historical record.
If a subscription is in the future, and it's turned on "now", then adjust the entry_at to "now".
Only complication is that "now" is different in different timezones.
We can take Amsterdam timezone by default. But in Bonaire that would mean subscrtiption start and end with an offset. Not so bad if they start early. But not very good at all if they end too early. Let's say 10 hour offset. Subscription would end 2 in the afternoon.
To remedy that we'd need to record time zone for users. Or at the very least for groups.
But this is only an issue once we start using the subscription table as source of truth for authorization.
Or we give everybody one 'grace' day. So if subscription ends on 31 July. We will stop authorizing user end of day on 1st of August in A'dam. This will remedy any timezone problems. (edited)
Sometimes we'd want to really block access. So we add a column "invalidated" to the current subscription. In that case access is never granted, regardless what the entry-at and expired_at say.
But still adjust the expired_at to "now". So that for historical purposes there's a record of the subscription, billing purposes rather.
There's a bug in templates-user feature btw. Lorainne ran into it. When searching for templates to link to users not all templates show up. It's a scoping misconfiguration (I think and hope). Not a disaster, because you can still link any template to a particular user. As in, you can find the templates in that case. Because I already adjusted that one. But I forgot the reverse case. So that's what I'm fixing first now.
*** lijst van actieve accounts per maand button
*** calculate active users at any point in time fron null point
*** chin-migration in branch calc-active-users



** STAGE! 6.chin DONE user-on-off-switch-migration

** STAGE! 1.chin DONE calc-question-type

*** Notes on formula feature
- Best practices
  - Once a checklist has been created from a template with formulas don't modify
    the formulas.
  - If you do modify the formulas don't update values in checklists already
    created from those templates (Keep in mind that formulas are only
    (re)calculated when values referenced in those formulas are updated).
  - If you do want to modify formulas in a template, and also want to safely
    modify values in existing checklists built from that template, design the
    formulas so that existing checklists are not affected. In practice this
    means using default values for (extra) question references so that when that
    question doesn't exist a default value is used and the result from the
    formula stays the same.
  - Properly debug and test checklists with formulas before using them in
    production. When combining formulas with question trees this is even more
    important. Test as many combinations, variations, and inputs of a checklist
    as possible/practical and check the results.
  - Don't use thousands separators in numbers in formulas!!!
- Tips
  - You can write formulas in Dutch or English locale, meaning you can use
    commas or dots for decimal separators. Of course use only one or the other.
    However, the use of commas or dots as thousands separators isn't supported.
  - To set a default for a question reference either add the default value in
    parenthesis directly following the reference, or use an underscore to
    separate reference from default value eg. "#123(100) or #123_100"
  - Take care when mixing multiplication/division and addition/subtraction in a
    formula, former gets calculated before the latter eg. "#100 + #101 * 10" is
    different from "(#100 +#101) * 10". With #100=1 and #101=1 result is 11 and
    20 respectively.
  - When designing a more complex formula it's easiest to break it up in
    several smaller subformulas and combine them in further formulas, it let's
    you name results and understand what's actually being calculated, eg.
    instead of "(#100 +#101) * 0.21" create a formula question for the addition
    first "#100 + #101", (let's say the T&T id is 102) then reference this in a
    second formula "#102 * 0.21". You could use the result of this formula
    again in further formula questions. Think spreadsheet..
  - When you want to check the calculation of a formula click on blue info icon,
    then on the formula tab. You will the formula written out there, with values
    filled in and in blue. When you click on a value the checklist will scroll
    to the question referenced. When the value is empty it will be a blue
    underscore. Hover with the mouse over the value to get more info on the
    referenced question and any possible errors.
  - When using a constant formula, (so a formula without input, eg "2+3") in a
    currency type question it's possible to set the currency by wrapping any
    part or the whole of the formula in a currency function: "AUD(2+3)".
    Available currency fns are: EUR, eur, GBP, gbp, USD, usd, AUD and aud.
  - When using a string type answer as input (such as lists, text questions etc)
    it's possible to set it to not just a number but also to a currency (eg
    USD300, $300, EUR300, € 200 etc). This will be parsed as a currency.
- Good to know
  - It's possible to use a formula with a constant value, so the formula would
    just be a number. This value gets written to the database on creation of the
    checklist (as value_open).
  - When using a list type question as input for a formula numbers are expected
    to be in the Dutch locale (comma for decimals, dots for thousands ). The
    same applies if a text question type is used a input for a formula. When
    using number type questions as input all this is not a problem, since
    numbers are stored in a locale independent way
  - It's possible to add the locale prop to the formula hash, eg {formula:
    "#100", locale: "en"} (in Effacts). If #100 refers to a string type input it
    is expected to be formatted in the English locale.
  - It's possible to wrap references to string type answers in nl, en, au or de.
    So for example "en(#100) * 10". This will assume the string in answer with
    id 100 to be formatted in the English locale. This will only work for
    references to string type answers, and will have no effect on other values
    or references!!
  - It's possible to use currency fns in any formula, not just constant
    formulas. A currency formula returns its own input, so does not affect the
    result, but it does set the currency of the final value. Of course don't mix
    them in the one formula.
  - It's possible to use percentage questions as input. The value is divided by
    100 before it's used in the formula. So if #100 is a percentage type
    question and has value 50, a formula such as this "100 * #100" will evaluate
    to 50 (100 * 0.50).
  - It's possible to use currencies as input to a formula. The result of the
    formula (if the formula question is a currency question) will use the same
    currency as the input (EURO, AUD, USD, or British pound).
  - It's possible to set the currency on the formula definition, however this
    will have to be done in Effacts. They will override deduced currency.
    Currency fns take precedence override this again though.
  - Using a currency fn in a formula will override currency deduced from input.
    So it's possible to make currency conversion formulas.
  - Results of formulas are stored as normal values in the database as if
    they've been calculated and entered by hand.
  - Formulas only get recalculated when their input values are modified!!
  - Therefore, if you modify a formula in a temp.late, maybe there was a mistake
    in it, note this will NOT update the values in existing checklists built
    from that template! You'll have to update a value referenced by that
    modified formula for that to happen. So it's worth it to properly 'debug'
    formulas before putting them in to use!
- Examples of formulas:
 #1 + #2 (where eg. #1 refers to question with tent_question_subject_id=1 )
 #1 + #2(123) (if question with tent_question_subject-id=2 has no value the default value of 123 is used)
 #1 + #2_123 (another way to set a default value)
 $1 + $2 ($1 refers to question with dc id 1, for when formulas are created in admin)
 Any algebraic formula should work, eg:
 #1/#2
 ((#1 - 0,3)/(#2 + 2))*100 (= 17.5 when #1=1 and #2=2)
 floor((( 1 - 0.3)/( 2 + 2))*100) (= 17)
 etc
 For more info on what's possible: https://github.com/silentmatt/expr-eval#expression-syntax

*** Decide on calcLastModifiedProp
*** DONE V2 Divide percentage by 100 before using in formula
*** DONE Fix formula fragments for percentages
So leave out the percentage sign!!!!! Or don't divide value by 100??
*** DONE Fix formula fragments for currency fns
*** DONE Fix formula fragments for locale fns

*** DONE Show formula in fragments in user's locale
*** DONE Implement EUR, USD etc fns.
*** DONE Fix setting currency for constant formulas
*** DONE Implement  currency props in formula map.
*** DONE Implement locale props in formula map, not needed
Formulas are expected to be by default in english notation. If you want to write
formulas in Dutch notation add locale: nl to hash. Eventually formula editor
will allow user to edit in either en/nl locale, but formula will be stored in en locale.
However, formula parser will accept both commas and dots. It just turns any
commas into dots first.
*** DONE Forbid removing formula questions
*** DONE formulaValue: try to parse as currency, otherwise as number?
*** DONE make Dutch locale the default, don't derive from user's locale.
*** DONE implement nl/en locale fns for fixing locality of string inputs!!!
*** DONE write tests!!!!
does prio and value updates work???

*** DONE fix fragments for counts
*** DONE Use meta vars in formulas (countYes etc)
*** DONE When setting priority recalculate even if answer is a formula!!!!
*** LATER: Can this be done more efficiently?
Work out if any count formulas are present, if so pass on answer to
updateFormulas fn
*** DONE Put formula in tab under info button
*** DONE Output of formula should be locale specific, not working for currencies
*** DONE power-select is not working
*** DONE Formula eats decimals, yeah, but only of list answers!!!
Because we don't know it's a number!!!! We just get a string..
*** DONE Set out update logic in PR
*** DONE Set currency (EUR/USD etc) properly for calc question. Either use dropdown, or
deduce from refs.
*** DONE Implement something for (or #foo 1) (or #foo 0), what to do with this????
*** DONE Put calc qtype on staging




    


**





** 4.chin FINISH dossier-dropdown-field-multiple-selection
*** Is on staging. Needs deploy
*** Make PR for bilby that has multiple checkbox




** 9.admin/chin START translation of Create Checklist and Create subdossier per dossiertype

** 10.admin PROPOSAL status-format
Add a term, a blockable switch and a default/max term for blocked mode to every status.
For every status that has a term, add it to the list of stasuses that can be
used to put a 'status-format-string' together.
A dossier type will have a start date.
A dossier type will also have a max-term? Maybe calculate from adding up all terms?
In DC app keep track/find out from event store whatever when and for how long a
status has been active and display that in progress bar.
Display portion of progress bar in red where status has been too long without
going to next status.
Statuses will progress automatically when checklists have been completed.
A blocked status will have extra time before going 'over time', as
suggested/mandated by the second 'block term' as set for any status.
So if dossier has as start date 1 Jan 2020.
And if first status has length of 2 weeks. Then on 7/1/20 progress bar will be
halfway status one. On 15/1/20 the first status' portion of the progress bar
will be red if status hasn't progressed yet. Green if it has. A checklist will
have been completed for the status to progress, or user moves the status forward
perhaps by hand.
When that status is set to blocked, the term of the status is augmented by the
length of the block's term, so it will take longer to go into the red. So this
blocked status is kind of a status'. Which can be tracked again if we know how
long each of these statuses are current.
So we create a hidden field for each status where the term end date can be
edited, so that will then override the defined term for that status.
Only show the field relevant for the current status.



** EASY:Clean up issues on github for dc-admin


** 11.chin LATER/EASY:chin/admin: dossier field type number/currency
** 12.admin LATER:admin:template-user-v3
**** DONE Show selection of templates as linked to the user's group when searching to link to user
Atm you see a blank result page.
**** ?? Possibly link multiple templates/users to multiple users/templates in one swoop
Select multiple users for instance, then 'bulk edit' them. Something like that
**** ?? Tags for T&T templates? So we search for them more easily. And add in bulk to a user.

** 13.chin LATER/DIFFICULT:chin/admin:Dossierfield type: put answer of Checklistquestion in it, not editable.


** DONE calc qtype take on feedback of Lucas
DONE https://tekstentoelichting.nl/effacts/form?method=SubjectDisplay&id=174173
DONE hash (#) for ids.
DONE show (partially) filled in formula
DONE hover on vars/values to show question.
DONE make import work for calc qtype (effacts tent subject id?)
DONE using of results of calculations in calculations
DONE watch it since there might be decimal commas in there, set locale properly!!
DONE add checkbox to show formula when there's a result
DONE show formula by default if there's input missing, (if it's not too long??).
DONE format output according to answer type, so currency, number, percentage etc!!!!,
and locale!!! for number, so replace . back into , for europe etc.

DONE Collect translatable strings

*
* TODO
** template page
*** DONE put on staging: multi select dossier field type
*** put on staging: latest version of templates: templates-5, update aum-next sha!!!
*** DONE update templates-users branch
- DONE shorten id column or remove
- DONE disable email renaming.
- DONE enable account by default also for group admins
  `Wanneer je dat als groep admin doet dan staat de optie Aan standaard nog op disabled. Wanneer ik het doe als DC admin dan staat het wel standaard op enabled`
- DONE update favicon
- DONE check translations!!!

- DONE Remove limitation on pdf logo!!!
- DONE Zal ieg het editen van de company toelaten. Dat was omdat je groep ook niet
  kunt wijzigen, en company was altijd hetzelfde. Maar die restrictie is vrij
  arbitrair verder. Alleen de DC groep ziet dat veld nog overigens op het
  moment. Op het moment valt het logo van de pdf terug op de company logo als je
  het niet gezet hebt,  als ik het me goed herinner. Als dat idd ook zo werkt,
  zal ik checken,  dan kan ik net zo goed het veld uitzetten.
- DONE Add rate limiting to login, or rather, disable login in production.
- DONE check organisatie veld, niet zichtbaar voor non group 10
- DONE Turn accounts 'on' by default, for now.
- DONE t&t link en id remove on user's page.
- DONE adjust link to admin video help page
- DONE test email renaming
- DONE Show number of active accounts in Group view, just go to users, filter on active!!!
- DONE Add extra fields for account cost (per account) and for extra accounts. We
  have monthly and annually accounts.

- DONE Update default logo for DC!!!

-Admin - Templates
1. DONE Add link to open checklist template in t&t
2. DONE  Add link to question in t&t
3. DONE Add link to create new checklist in t&t!
4. DONE By default only show active
   subjects - dossier types, templates, users

*** on import of templates, set info-source!!!
If lawcat-link exists set it to lawcat
*** What to with all the lawcat links that don't have a article/number???
*** Search lawids, show questions that are linked to them
*** Bulk edit
*** Turn off prio
*** Smarter conditions, so remove option YES when already selected in other condition
*** Check for node version
node -v
compare with .nvm
stop script if not equal, ask to run nvm use
*** Hover on plus icon on item to insert items
Open box that simulates inserting above/below. So Question: New, Search butons
should hover kind of between item and item above, and same for below.
With unlink button in between?
Keep placeholders.
Remove New item buttons in zoomed in mode, remove unlink button altogether,
remove new condition button. In workspace mode, new item buttons just create new
items at depth 1.
*** On selecting an item show  'Upload/sync' button if
 it's a new item, not copied from public (upload)
 or group is the owner of the original public item (sync)
 but group has to have permission to upload to public in the first place!!
*** When updating item in public lib
Set last primary modified date on all group's copies. Also set synced field to that
value when syncing item. When displaying group's item, if the two values are
unequal then show red exclamation mark.When user accepts changes or rejects set
synced to primary mod date again. When user modifies data himself, records last
mod is different from primary mod date.
So we can search and count all the items that have prim mod date different from
sync mod date. Same for user modified items.
Have flag on item that will enable autosyncing. On updating original in lib
trigger worker, or put on queue to process.
*** Unlinking should just move them to 'unlinked' category.
Add unlinked category automatically to workspace. Add 'search unlinked' button
in zoomed in mode. Not persisted. So on refresh it'll be gone.
*** To use DC template in DC 'export' to T&T format on selection
**** misc
Just have frontend pick up answer type a bit more intelligently, so use flags,
don't deduce from question type number only.

- Write/use eventstore consumer or use delayed-job-consumer
-  In any case, some mechanism to processevents in event-store and
  to periodically sync entities for a group, or groups, or all.
  Also if an entity gets set to synced=false send an email for instance.
**** template libraries.
There is one public library. All groups (a group is a paying client) have access
to that one for creating checklists. Groups can download a template from a lib
to edit. The owner of the template can edit it's own group's version. And update
the version in the lib. Anybody that downloaded that ttemplate will get
notifications, (partial) syncing opportunities. Any group can set up its own
libs for sharing with other groups. A group has to request the lib's owning
group for access.
**** Monetization model:
1. A group pays for per user access to the group.
2. A group pays for every checklist instantiated.
   Different checklists come at different cost
3. A group pays for access to certain templates. So access to particular
   template libs.
**** Have option on import to public lib to pull apart hypen separated categories
into the tree that's implied
 - At the moment Kristian is organising his categories by including the path to
   the category to the category name. This is error prone and impractical, so
   it'd be useful to make this explicit by showing and editing categories in a
   tree like structure ui.

- You could split out templates-categories by their name into qbucket tree!!
This would reuse some buckets as far as category names are the same:
Category name of a-b-c-d and a-b-e-f would share buckets a and b.
But you'd have to order them first, so categories which are in this order:
a-b-c-d
a-b-e-f
a-b-c-g
would become:
a-b-c-d
    e-f
    c'-g
This would play havoc somewhat with the bucket structure when trying to update from an updated template as
imported from tent. Mainly what to do with orphaned buckets?

**** All entities (buckets, questions) belong to a group or a repo
A groupless or repo-less entitity can't exist!

**** A sub entity can be a singleton
Meaning, there's 'only one of it', and can only belong to one parent entity, and
does not show up when searching for any entity to link to another entity. In
other words, you have to set an entity as non singleton to make it reusable, and
linkable to more than one entity. It's as if the link is a belongs-to, and not a
many-to-many. All categories as imported from tent templates to buckets will be singletons


**** A group might want to transfer responsibility for a primary to another groups
- If a entity, nor any sub entity is linked anywhere else within the group then
  it's easiest to just modify group-id for the entity tree.
- Otherwise, steps:
  - Copy from repo down to group 2.
  - Publish again.
  - Unpublish from group 1
  - Have a batch job that replaces links to group 1 version to the group 2
    version
  - Every group that uses parent entities of the substituted entity directly
    from  the repo will now use the new primary as it gets synced up. If a
    group has linked directly it should get a notification what has happened and
    the option to batch update its links.
  - We also need to update buckets-users and buckets-dossier-types btw.
- If the tent template is still authorative, copy that one down to group 2.
- This is all possible, but in a way, when transferring responsibility to
  another group, really we should just start from scratch with it. So republish
  it under the new group's name. People can then choose which version to use,
  and update their buckets and links themselves.


OR::: Ownership of an item is in qbucket-group
So whatever group is linked to the time is allowed to update the item in a lib
kj
**** A lib item is always primary.
Items in groups point back to them. And they can be owned by a group
**** It might be possible to link lib items
You just can't edit them. YOu'd have to copy them to your group first.
See notes in considerations
*** Incremental delayed copying
So copying means creating a new item, filled in with data from the original.
When unfolding, create the children questions and qbuckets,  pull in the
real children,  add ident to new children to original. Provisionally fill them
in. When user modifies the data, fill in for real. When saving fill in for real.
Plus send mutation to backend to duplicate reset of children and sub children
This will work for copying within group and for copying from lib to group
*** Search dialog can filter on group and on public.
So select the group(s) you want to see items from. And/or list public items as
well.
Public items will have green vertical line in front. On selecting them item will
be copied to workspace to own group, unsaved, with content of original. On save
the effect will "downloaded to group"
*** DONE Adapt searching for lawcat link to new lawcat api
**** search for lawcat in dialog
**** Add lawcat on demand loading
**** Put in for value id parts of https://www.lawcat.nl/#/BWBR0027471/artikel/1 so BWBR0027471/artikel/1
*** Fix T&T info linking in questions
**** DC app grabs lawcat link for text and explanation if it's there. Any tent url
doesn't get send to DC app frontend. If you click on comment tab it tries to get
info from tent using id in tent_question_subject_id. If there's no lawcat link
this tent id is used for text and explanation as well.
*** When selecting an item, or rather more than one show bulk edit button
The bulk edit shows up dialog for items. Similar to question or qbucket expanded
item.
Any edits there affect all the selected items
*** Dragging into condition's placeholder collapses it!!!
*** Fix up editable list (dragging not working)
and also on update root qbucket gets updated
*** Page is not set properly when switching from templates>categories etc
Especially after going to other page
*** Conditiion doesn't get question's values so complains
That's because question doesn't get loaded till it's expanded
*** Finish ui for questions
***** DONE Enable priority setting ui
***** DONE push remarks, tasks etc down to bottom
***** DONE add info collapse/expand button again
***** DONE remove categories from more tabs
***** DONE select letter texts by default

***** Add calc question type
***** Add slider question type
*** Fix misc issues for linking users and dossier types
***** Set count of templates and users and dossier types properly when linking
So update the aum-data {:count n}
***** Fix reciprocal links of templates dossier types and users back to templates

- when linking back to templates, add template to workspace
if it isn't there already.
*** Edge cases
**** breadcrumbs'll run out of space on the top
**** modifying qbuckets doesn't trigger page dropdown red status
root component doesn't get rerendered in templates page changes
maybe put page bar in a component or something. Or the dropdown. So we can het
have it rerendered by doing [:cmp :pages-dropdown]
Make pages dropdown a cmp, update cmp async
**** Unlinking/removing unsaved new items should show are you sure dialog
Cause we're going to throw them away!!!! And remove from unsaved set
**** when calculating is dirty for save button
ignore unlinked links to new items
**** when saving record, unlinked records
should be saved as such, but not their children!!!
Or don't allow unlinking items that are dirty or that have dirty children!!!
**** don't fold open empty items when edit-enabled is false
so pass flag to make-atlaskit-tree to not do that
**** Updating name of qbucket doesn't update breadcrumbs immediateley!!
Make breadcrumbs a cmp, update cmp async
*** Ordering
**** order of questions is not saved properly!!
Problem I think is assigning order to new items
**** Reordering results  is-dirty not going away when reordering to original state
We'll have to fix that in is-dirty I think somehow.

*** Dragging item onto placeholder fucks up is-expanded!!! Or not??

*** Importing templates
**** question tree tables
**** Optional questions should be indicated as such, plus add ui for it
Are they marked properly in the db on import?

*** Performance
**** Backend returns tempids twice in the response
**** Probably don't need to return created and updated info
**** Add paging or some other perfomance enhancement to subbranches
They can be awfully long!!!! And app will stop responding!!!!
**** Don't parse if not expanded!!!
In read-key templates
          value (when (and data
                           (or (= query-root :om.next/root)
                               (= query-root data)))
                  (timbre/info "Diving into tree for " data)
                 ;;TODO adapt aum-next denormalize so that query-roots are not
                 ;;recursively parsed???
                 ;;Or somehow don't keep parsing when it's not shown on the page!!!
                 ;;So when it's not expanded!!!
                  (db->tree env {:query query
                                 :data data
                                 :refs @state}))

- recursive complex queries!!!


*** Linking same item twice to parent creates some om-next problems!!!
Might need this to deal with link again/copy/move issue
*** Undo/redo/revert/is-dirty
*** Delete, Unlink, Move, Link again, Clone, Clone (selection of) subtree as well.

Er zijn 5 dingen die je kan doen met een 'item',  een vraag bijv.. Namelijk
1. Ergens anders aan hangen, dus van de ene categorie naar een andere verplaatsen.
2. Ergens anders naar verplaatsen, maar de link naar de originele categorie intact laten, dus de vraag is nu aan 2 verschillende categorieen gelinkt.
3. Ergens anders naar verplaatsen, maar daar een kopie zetten. Dus de vraag lijkt nu aan 2 categorieen gelinkt, maar het zijn eigenlijk 2 verschillende vragen.
4. Vraag verwijderen van categorie door gewoon te unlinken. Dus vraag bestaat nog, maar is niet meer aan de categorie gelinkt
5. Vraag 'deleten', dus de vraag bestaat niet meer. Is dus ook verwijderd van enige categorie.
Niet alles hoeft mogelijk te zijn altijd, maar dit zijn de opties voor een drag and drop. (edited)
***** Slack discussie
En wat als de ‘moedervraag’ wordt gewijzigd?
Michiel van Oosten [15:12]
 In geval van kopie? In het systeem zijn het verschillende entiteiten. Dus de link is weg. Dan zou ik dat weer moeten bijhouden. Kan wel, maar hangt een beetje af van hoe de editor gebruikt gaat worden. Willen mensen by default een vraag kopieren, of een nieuwe link maken. Beide is verwarrend als je niet weet wat er gaande is onder de kap. Soms is een vraag zo'n veel gebruikte vraag, dat je als je die edit, bijv een spelling fout verbeteren, dat je dan wel verwacht dat die edit in alle checklisten wordt doorverwerkt. Bijv de Onderteken deze checklist vraag of zo. In andere gevallen verwacht je dat een vraag een kopie is, bijv als je de vraag als een soort sjabloon gebruikt voor een soortgelijke vraag. Ik denk dat in de ui op een andere manier heel duidelijk gemaakt moet worden met dialoogjes, are you sure, help texts, popup tekst on hover etc.
Lucas Oost Lievense [15:13]
 Ze willen dat wij vragen bijhouden, maar wel de categorie kunnen aanpassen bijvoorbeeld
Michiel van Oosten [15:14]
 Bedoeling is wel dat tussen groepen, die dus altijd kopies hebben van een templates en vragen van andere groepen, dat daar wel een link bijgehouden wordt. Zodat je updates krijgt en dan kunt kiezen wat je wil doen met de update.
In dat geval kunnen ze vragen automatisch laten updaten, maar de categorieen kunnen ze kiezen om die niet te laten update automatisch. Maar dat moet zich een beetje wijzen in de praktijk denk ik hoe dat gaat werken. Hou in ieg wel rekening met wat er allemaal moet kunnen eventueel.
Lucas Oost Lievense [15:17]
 ja die bedoelde ik
dus onze checklisten die door anderen worden gebruikt
Michiel van Oosten [15:17]
 Idee is dat er een template library is. Die in eerste instantie dus onze gewone verzameling templates is. Als een template willen aanpassen dan moeten ze die 'downloaden'. (edited)
Dwz dat ze een gelinkte kopie krijgen.
Met updates als de 'moeder' template wordt aangepast.,
Dat wordt dan ook een private template voor ze.
Die ze eventueel weer zouden kunnen delen in de template library.
Of in een meer prive library alleen gedeeld met bepaalde groepen.
Helemaal mooi zou zijn als ze de template te koop kunnen aanbieden. Of te huur of zo. Kunnen we ook met de DC templates doen dan. Dus beschikbaar voor zoveel maanden voor zoveel geld per maand. (edited)
En als groepen hun eigen templates maken en te koop/huur aanbieden dan zijn wij de middle man. Kunnen we dus tol heffen. (edited)
Lucas Oost Lievense [15:22]
 ja dat is zeker een mooi concept :smile:
Michiel van Oosten [15:23]
 Maar eerst gaan al onze templates in de template library gewoon. En in de DC app kunnen mensen een T&T template kiezen, of een template van de nieuwe template library. Of we schakelen ze groep per groep over.
Dus veranderd niet zoveel wat de DC app betreft.


*** Have some reasonable workflow for template library
**** Make a friendly import template fn that only adds new templates
**** DONE admin page to import group's templates into public template libary
**** browse public template library, in non edit mode
*** Misc smaller issues

**** How does a non dc group monetize creating templates?
Also see Considerations on template libraries

**** put om-next into aum-next
also, there's a bilby.om.next there, and also used in save-records!!!

**** remove unused icons!!
**** get aot task to work
 java.lang.IllegalArgumentException: HTTP Host may not be null

 at digicheck.elastic.core$client.invokeStatic(core.clj:15)
	at digicheck.elastic.core$client.invoke(core.clj:14)

**** add dashboard boot task back
**** Write proper validations for qbucket and qbucket-qbucket and qbucket-question
For instance:
Groups can't write links between other groups qbuckets!!!
**** fix up repl tests of tree-utils make-atlaskit-tree
**** Bulk expand/collapse/load
***** compare answer-choices properly in is-dirty
   ;;It's possibly a string in meta. Also it might be a vector of strings, not a vector of maps
   ;;So normalize it, then compare.

***** So enable selection of subset as well
**** When searching to insert set search filter properly
**** Dnd
***** Dnd of top level items is not working. Should be just ignored.
***** Drag and drop onto items not working, or disable

**** clean up chin templates migration
**** don't forget to uncomment bugsnag from index.js
**** DONE Don't load app-dev.js in admin.html in production!!
**** DONE download newrelic-agent.jar on install/build
**** DONE make path to build-info.json (make-parents)
**** DONE don't load app-dev.js in production
**** DONE gzip assets
**** DONE fingerprin assets
**** DONE in dev the build-info.json is from last run
That's because first ns's get loaded, which read build-info.json. And then at
the end does revolt bootstrap write the updated json.
We could write in dev mode the json before reading it
admin.html, so also build-info sript link is now writtin in revolt task
**** DONE on search dialog, reset doesn't work
**** DONE on search dialog when switching search type reset paging!!!
search questions, go to page 2, then switch to templates for instance
**** DONE Filter out test-page, query-page etc, so respect is-development? !!!!
**** DONE Fix env variable and status throughout the code!!!
**** DONE Fix up scrips and revolt and tools.deps
***** make a revolt task that writes main.cljs.edn from revolt.edn
***** unify/workout bin/dev and bin/backend and bin/figwheel
figwheel uses main.cljs.edn. bin/dev uses revold.edn
so there's duplication between them, for instance for foreign libs
**** DONE on import of template qbucket-qbucket links get duplicated on second import!!
**** DONE You can only go 3 or 4 levels deep!!!
**** DONE Make it so you can restart app in prod
and pick up any db schema changes as well! And restrict to a few users.
try to make it foolproof? be awful if it crashes the backend or whatever.
**** DONE get root component a bit more cleverly in app.util
root-component (first (get index components.root-component/RootComponent))
*** Bring templates branch to release-branch functionality
**** DONE Count from aum-data flashes
Only set rows to nil, not the whole key
**** Fix up translations
**** DONE Get prod jar running
- dc-util has to be installed locally, and referred to in deps.edn by version,
  not git url or by local/root, get error for config
  Exception in thread "main" Syntax error compiling at (dc_admin/backend/app/config.clj:1:1).
  Caused by: java.io.FileNotFoundException: Could not locate digicheck/common/util__init.class, digicheck/common/util.clj or digicheck/common/util.cljc on classpath.
**** Fix up group autocomplete for subgroups etc
**** Fix up theming, setting logos etc on group page
**** Resource interpreted as Stylesheet but transferred with MIME
type text/plain: "http://localhost:8080/admin_new/app.css".
**** DONE fix env
**** hang whole query of the group
*** Do minimal to start using templates in DC app
**** Import templates group by group to template library
- Because we can't browse tent templates!!!
- Add button to sync all group templates from tent to template lib.
- Perhaps show a list of templates, and its previews so user can select
  templates to actually import to the public lib
- Add button to sync any new group templates from tent to template lib.
- Add button to resync one template from tent to template lib, updating it from
  tent, but erasin any possible edits.
- Use lots of warning dialogs! Is irreversible!!!
**** Browse template library in edit disabled mode with lots of filtering options
- Add filter to only see the group's templates, so any templates that are connected
  to any group's users, or to one group's user or to any dossier type, or to one dossier type
**** Add download template functionality
- This will place a copy of a templates and all of its categories and questions,
  recursively, into the group. So it will set the group-id on the copy.
**** Switch to groups template library button
**** The group's template will now be editable.
**** Owner/maintainer group of template can upload again to public lib
- This will trigger update notifications in private templates. There's an
  algorithm designed for that already.
- Owner/maintainer group of templates will be initially almost always be the DC
  group, group 10. But any group can be an owner/maintainer
**** A public library template will be linkable to any user and dossier type
- a group template only to the group's users and dossier types of course
**** User can choose in DC app to use tent templates or bilby templates?
Which means DC app should be totally agnostic about where the template comes from?
**** Adapt rails app
- Write dc template in t&t template form before use?!?!?!?!.
**** In DC app you select a template from a by default filtered list
- By default: the templates linked to a dossier type, otherwise linked to the
  user itself. Or user can search by name and tag.
- Also add filtering on user, dossier type, tag (what category a template
  belongs to), public or group.


*** Document and clean up whole of bilby app and libs
*** Return to regular tasks for whole of bilby app
*** drag new items into tree
https://ecosystem.atlassian.net/browse/AK-6101?jql=project%20%3D%20%22AK%22%20AND%20component%20%3D%20%22tree%22
https://ecosystem.atlassian.net/browse/AK-5745

*** DONE persist-workspace properly
clearing doesn't remove from storage
*** DONE Fix condition on the fly updating
*** DONE save whole page,not just what's selected
*** DONE What to do with new items and paging/reset/search????
*** DONE Allow clearing new items if has no children
*** DONE When adding a sub item for the first time set link records properly!
So set unlinked etc properly. It will try to reload the records on opening again
*** DONE when adding from search for placeholder, then set isExpande to true!!!
*** DONE Propogate tempids to real id map properly
**** DONE when saving an new and unfolded item it collapses after save
and we get an
Can't perform a React state update on an unmounted component. This is a no-op
this is because state of a component is stored in item-state-by-path
and the path just changed because an om-id got changed into a real id!!!!

**** DONE update desktop-qbucket-ids in storage after saving!!!

*** DONE when searching and then linking questions, load full info for question!!!
We load it on command, when expanding the question instead
*** DONE question is not saved!!
*** DONE clicking on breadcrumbs doesn't work
*** DONE 2 Link users and dossier types to templates
*** DONE
- DONE ui for condition
- DONE icon for condition
- DONE elide breadcrumb, show full when hover on it
- DONE search questions
- DONE check checkbox when selected
- DONE fix reorder questions
- DONE keep state between paging
- DONE open placeholder for new items, keep closed when closed



*** DONE Save in local storage workspace templates/categories/questions plus the order
- Just store the join tables there??

*** DONE When paging the state of items is lost, and is even buggy
with cmp-state stored by item id still existing in the cmps qbucket and question!!!!
But, of course, since we have new set of items and the paths are based on them.
We could memoize pages and the accompanying cmp-state's in qbucket and question.
Or we could save state by path. Which is much better. Just the lookup will be a
bit trickier. So burrowing down om/props in dnd-tree. Currently we just do get-in.
*** DONE Link in new qbuckets/questions using fullscreen dialog
*** DONE Collapse/expand tree-item lines on move
*** DONE replace om-next beta with commented version.

*** DONE use components for qbucket entry
when using 100 entries om-next slows down very much, so use defui for them with
proper idents so we narrow in on the comp to update
*** DONE make sure to only go to server when needed
still going to server for qbucket-qbycket/order etc props and for joins
*** DONE don't pass in fns in computed!!
for transacting on root use trick of finding root cmp in index
I do this in the full page link user-template branch for changing page
*** DONE UI
- Every row should have
1. Drag handle
For reordering, deleting
2. Fold/unfold 3.
Show more detail, plus subs for entry
Selection toggle
- For mass selection, deletion, editing, dragging etc.
4. Edit button
To open entry in full size form dialog.
-So: checkbox|<space>|fold toggle icon| Entry data columns|draghandle

-> Tools
- Fullsize dialogs for search, editing in form iso row
- Breadcrumbs, and zooming in/out
- Check! Tables of data
- Check! Open/close accordian style components
*** DONE UI-state
Some way to persist component state, open and closed, loaded/unloaded components
** General admin bugs
*** can't input text when field is empty for translations
*** deleting multiple fields at once doesn't work with new post-remote
maybe delete-dossier-fields plural?
*** Saving user doesn't work.
Goes to save-user post-remote iso save-record
Maybe pass in symbol to post-remote in mutate method return map
*** input placeholder looks same as entered text

** New features
*** smarter translations
- use params in translation keys, so interpolation
- load translations zipped!!!???!!!!
*** new features as on notes on desk
*** finish data explorer
*** elastic search
*** tagging
Why not tag table, with ids in the 'tags' column?
And adjust parser somewhat to retrieve not just belongs-to-one, but belongs-to-many?
Or use many-to-many, so join table. But search will be a pain, unless we
normalize tags into tags column in elasticsearch or something?
Or just inline tags. Problem is renaming a tag then, also adding description etc
to tag becomes hard..

All tags for an item
All items for: one tag, t1 AND t2, t1 OR t2, t1 AND not t2
Tag cloud: how many items per tag
Change tag? Possibly add and change meta data of tag?

A tag (text) field on question
Plus tags table: [tag, question-id]
http://howto.philippkeller.com/2005/04/24/Tags-Database-schemas/
http://howto.philippkeller.com/2005/05/05/Tags-with-MySQL-fulltext/
http://howto.philippkeller.com/2005/06/19/Tagsystems-performance-tests/

https://stackoverflow.com/questions/20856/recommended-sql-database-design-for-tags-or-tagging
https://stackoverflow.com/questions/2885564/ways-to-implement-tags-pros-and-cons-of-each
https://stackoverflow.com/questions/1810356/how-to-implement-tag-system

*** Link categories tentatively, with a hint/advice text
So when filling in questions show on right (where new categories are) which
categories are recommended. Or have recommended button on grey bar of category.
Show hint/advice when hovering, or clicking/touching.

*** Add delete button to date-time-picker, to reset date to nil
*** connect directly to lawcat database
*** refresh by clicking button, instead of refresh


* DONE iauditor lessons:
** DONE only allow questions before any categories
So while it's possible to add cats and questions to a parent cat, they need to
be grouped and questions come before any cats.
Cause we flatten it all in checklists. Questions seem to belong to a child cat then!!!
** DONE for question tree: have an editable condition/linking line in between
sort of creates a subcategory in which you can drag questions and cats.
* DONE
** DONE Fix delete box not getting red always
   So drag-over class is not always added

** DONE simple change of default :remote to :bilby
Should be easy in reconciler.core.cljs and in read.cljs for defmethod locale,
but there might be complications still? With mutations and post-remote?

** DONE fetch tent question data ourselves instead of making dc api call


* Considerations on template libraries

** Repository of published entities
 A repo is a kinda multi group, accessible to more than one group
And only holds buckets and questions. It's where you can publish your
group-local buckets and questions to for use/copying by other groups.
PROS:
- You can link users, dossier types directly. Include in searches. And use
directly to make checklists from. You could also link to as sub entities. They
are automatically synced for all groups.
 .  You could then limit access to that public repo based on group/user/whatever. Make several
semi-public repos.  Make a repo for yourself and one other group etc.
- Publishing is an explicit act of copying 100% to public repo. You can edit
your copy all you want, till you 'publish', or push edits for the tree and
everything below. So you have your own working copy, but master copy is in
public repo.
- You can push mods for just the one sub buckets. Or just the one question.
- We only have to update from group to repo(s).
- Groups that don't want to modify the entity at all can use it directly.
  Prevents endless copying across groups!!
- Repos entities always have in effect track-primary=true, auto-sync=true, in other words
  they are 100% copies from their primaries in the group they're from.
- You don't need the published and syncable props, these are no explicit acts.
  If you're happy with a question edit. Or a bucket's ordering you 'publish' the
  edit. And only that synced to all the groups, if they have a copy of it..
- We don't monitor mods in groups, we just sync an entity (tree) when (publish) button gets pushed
- We can still copy an entity (tree) down to our own group. We are free to edit
  it then, and use the copy to make templates, extra categories etc. We can
  leave the track primary to true. So if primary gets updated (published to) we
  get notified/autosynced
- We can republish this if desired. But we we'll need to explicitly publish any
  mods, whether from syncing from original primary in repo, or we edit it
  ourselves. Because we can only autosync from repo to group, not from group to
  repo.
- Removing a entity from a repo means it can't be used anymore. If a group has
  copied it down they'll have to maintain it themselves. Any subbuckets and
  questions still in public repo will still be syncable.
- It's easy in ui to distinguish between primaries and any copies held in group.
  Either as primary (work copy) or as a replica (group maintained), by prefixing
  the bucket/template/question etc. Or different color or flag or whatever. Also
  public ones are not editable, group ones are. Easy to do a diff by loading
  both.
- You can only 'unpublish' any entity if it's not linked to from any group's
  bucket. Or they you copy the last version to all groups that link to it. Or
  groups always copy down any interesting buckets. One of these options.
  Unpublishing means entity and all its subs are gone from repo. So you have to
  rely on your own copy of it, or don't use it anymore.
- ?? A copied down entity can ony be republished if republishable=true
  This prevents people from making entities avaliable to other groups as work of
  their own?
- You should be able to set a price on:
  Use -> linking to it from your own buckets, making templates from it.
  Updates -> Getting updates as they are published.
 So: a bucket has a price set on it. Group user buys it for the month.
  Collectable for that group is increased by that amount for that group. Either
  trust they pay, or wait till actual money is inned (credit card charged for
  example). Either way, in a table somewhere a record says: bucket-id,
  valid-from, expired-at.
- People are not poking/reading/copying from each other's group this way. They
  have to explicitly 'publish' You keep your primay behind your group's wall.
CONS:

** DONE Copy all templates to DC qbuckets. Publish from there according to access by templates-users.
- a template will become a DC bucket
- a group should have access to a bucket if that group has at least one user linked to the template
- access means copied to repo that group has access to.
- so copied/synced tent templates will have to be published to the right repo.
- if a bucket is meant to be primary in a non dc group then transfer it on a
  case by case basis, because as it stands now we don't know which templates are
  whose responsibility. Privacy valley might have its own templates by now for
  instance.
- Copying/syncing from template to qbucket
This should be able to be done multiple times without effects, other than that
the primary gets updated accordingly if template has been updated from t&t

- You could split out templates-categories by their name into qbucket tree!!
This would reuse some buckets as far as category names are the same:
Category name of a-b-c-d and a-b-e-f would share buckets a and b.
But you'd have to order them first, so categories which are in this order:
a-b-c-d
a-b-e-f
a-b-c-g
would become:
a-b-c-d
    e-f
    c'-g
This would play havoc somewhat with the bucket structure when trying to update from an updated template as
imported from tent. Mainly what to do with orphaned buckets?


** Deal with orphan buckets and questions on syncing
- Removing means setting 'unlinked' flag I think? Or deleted flag. Don't have to
  actually remove them, but we could. In any case, they're not available to make
  templates from or to link to from other (group's) buckets
- If linked to nothing we remove the entity.
  So remove a bucket and if linked to no parent bucket, remove the bucket. Do
  the same for the rest of the tree recursively. Make sure that all entities keep at least one
  path to a root bucket in the repo.
** DONE obsolete A replica can be a primary
As we publish to repos and copy down to groups. We keep the link
** DONE Treat dc as any other group
It's just that we copy templates to the dc group as buckets initially on a per
template basis, and from there publish, since we maintain most of these
templates. But we can copy tent templates down to any group we want. And they
can then maintain them.
** DONE A group might want to transfer responsibility for a primary to another groups
- If a entity, nor any sub entity is linked anywhere else within the group then
  it's easiest to just modify group-id for the entity tree.
- Otherwise, steps:
  - Copy from repo down to group 2.
  - Publish again.
  - Unpublish from group 1
  - Have a batch job that replaces links to group 1 version to the group 2
    version
  - Every group that uses parent entities of the substituted entity directly
    from  the repo will now use the new primary as it gets synced up. If a
    group has linked directly it should get a notification what has happened and
    the option to batch update its links.
  - We also need to update buckets-users and buckets-dossier-types btw.
- If the tent template is still authorative, copy that one down to group 2.
- This is all possible, but in a way, when transferring responsibility to
  another group, really we should just start from scratch with it. So republish
  it under the new group's name. People can then choose which version to use,
  and update their buckets and links themselves.



** A replica (from primary in repo) in a group either gets auto synced, or a notification
In either case user might want or need to receive a notification in the app and
or email or other notification about what has updated, or can be updated. Would
be great if this was a some kind of hook. (Might want an update in slack or something)
Updating an entity in a repo is an explicit act btw. And the update is on the
bucket only, but any sub might be updated. And not the bucket itself at all.

** ?? What if we publish an entity that links to entities that are in the repo? In another repo?
** If 100% synced, why copy at all? And why not just only keep diffs if <100% copied?
Keeping diffs for records work. Any non null value overrides primary.
More tricky for links between entities,  they also don't have primaries.
BUT:
You'd have to fetch the whole chain to calculate the final version. For every
bucket and question. Both in DC and in admin. Yes, it's easy to see what the
diff is, but only needed in admin. We need to calc final version every time a
checklist is created!!!
HOWEVER:
If the chain primaries is at most 1 deep then we might be able to put together
an entity as defined in repo and in group by combining them.
An entity is always copied with it links to subs. Initially to the primary subs.
So we can edit them as well. If editing a sub, point to the sub's replica, not
the primary anymore.
** Every entity should get a unique uuid, and it should match the uuid of its primary entity, recursively.
That way we can query the whole primary chain in one swoop, and also check for
loops. Such as when adding a replicate to  its own primary as a sub, which is
not possible. In general adding an entity to itself is a bad idea. For instance
adding a replica of a replica of a replica to the first replica as a sub. In
principle they are the same entities, even if sometimes not everything is synced
down the chain. If at any point sync settings are set to 100% inevitably you'll
have a situation where an entity is linked to itself as a sub, ad infinitum. So
this is illegal to do. Same uuid means you can't add it as a sub. Simple.
** Adding or removing a bucket/question from a parent bucket count as mods to the parent.
** Updates happen on a per bucket/question basis.
** A mechanism to propogate updates through the system.
*** Decoupled  from update transactions

*** when syncing with primary decide on what is kept and what is synced
On syncing to repo make perfect copy.

On syncing down to group:
If any mods have been done this should be recorded on the entity. So we know on
comparison if a mod is on the primary or on the replica. If on the replica, persist!!

Have some kind of ui where you explain why and what is different from primary,
and options/buttons to revert tot the primary version of a prop or link(s)

Perhaps questions get synced 100%, sub qbuckets get synced, but ask whether
group wants to keep qbuckets added by group, and whether to add again the
qbuckets that the group removed. Perhaps show an option dialog where group can
check the things they want happen:
- complete sync, so wipe any and all edits in content and structure
- keep any edits in content of qbuckets
- keep any edits in content of questions
- keep any added questions to qbuckets
- re-add removed questions
- keep any added qbuckets to qbuckets
- re-add removed qbuckets
Also any individual qbucket and question can be synced. You get the options
again.

- sync-options:
-> has to be set/will be set explicitly on entity, and is not inherited, which means in both
trees same settings will apply. If you use that entity in more than one tree
it's the user's responsibility. Any mod to a replica entity will persist by
default, with a clear warning on the entity that it's not in sync.

It should also be possible to preemptively protect a prop or link from getting
synced/overwritten by the primary.

Sync-options:
:ignore-linked-[sub]-on-sync (default is false)
:persist-unlinked-[sub]-on-sync (default is false)
:ignore-unlinked-[sub]-on-sync (default is false)
:persist-linked-[sub]-on-sync (default is false)
(where sub is either qbucket or question)
:various-options for content, all by default false:
- :persist-qbucket-name
  :persist-question
  :persist-t&t-link
  :persist-lawcat-link
  :persist-question-type
  :persist-answer-choices
  :etc.

We can also go nuclear and turn auto-sync off for an entity, meaning we gotta
approve and manually sync any updates. Or we might not even want the
notifications, we don't care at all if primary gets updated. So we can set
track-primary to false.

But sometimes we would like to turn auto-sync/track-primary off for or on for a whole tree of
entities.
But problem then is that an entity can be a leave in multiple trees!!
To resolve this:
track-primary,
 true wins over false
 because otherwise unexpectedly an entity doesn't get updated in one template
because somebody decided that they didn't want to track the enitity as linked in
the other template.
- auto-sync,
true wins over false
Kinda for the same reason. However you would still get the notification. But
user of template one expects the sync to autosync, and then it doesn't. So he'd
be using outdated entities potentially.

*** Deciding on what sync settings apply to an entity on syncing
Solutions:
1. Sync settings are set for a group, and overriden per and at an entity
   But you can't set sync settings for a subtree this way.
2. Sync settings are set on every entity.
   We can change sync settings for a subtree this way, looks like
   However, we would have to potentially update a whole bunch of entities if updating a
   parent bucket. Perhaps thousands and thousands of them.
   But more objectiably, you'd have to resolve what settings to set if an entity
   belongs to more than one tree.  True wins over false, unless it's set
   directly at the entity? Or not perhaps. Maybe always true over false.
   Also updating 60.000 questions takes 1.5 seconds. We can easily have 10 or
   100 times as many questions. Which would make this approach impractical.
   And we'd also have to build the tree of affected entities first as well
   before we can do any bulk update. And resolve per entity.
3. Build and maintain a graph of all entities per group.
   The whole graph can be loaded into memory, any sync setting easily calculated
   for any entity anywhere in the tree. Also, it's handy when an entitiy has
   been set to synced=false we can easily tell the user which parent buckets
   this unsynced entity belongs, so user can make a decision more easily.
   Without having to click his way to parent buckets.
   Trick might be maintaining it. It should reflect the actual structure/tree in
   the db of all buckets and questions at all times. And hold the sync settings
   for each entity.
*** Apply settings as derived from parent
*** An entity with synced=false means it's not yet synced with its primary
*** Only entities that have a primary and are tracking it can have synced=false
*** When a entity gets modified and it's tracking a primary and track-primary=true, synced is set to false
*** When a entity gets modified and primary-id=null or track-primary=false, and syncable=true all its replicas get synced=false
*** OBSOLETE An entity that is tracking a primary, which is modified, but which is unsynced, doesn't get synced itself
till the primary is itself synced. This is because, it might have been modified,
but we gotta see if these mods actually are gonna stick after syncing the
primary to its own primary. Maybe more, maybe less changes might have to be
taken into account. Or none at all! A mod of a primary is not really finalized
till it is synced itself.
OBSOLETE with repos. Entities in repos are always synced. They're like root
primaries. Entities in groups have their changes pushed/published manually.
Never automatically. If we decide to publish an entitiy that's not yet synced
with its master in a repo, that's the user's choice.
*** An entity that gets synced and actually modified will need to set synced=false for all its replicas
Perhaps just modifying it is enough, and mod-job can pick it up and set synced prop.
This is only applicable to entities in repos which need to broadcast its mods to
all the replicas in the groups.


*** Sketch of an algorithm
 - We just save mods as we make them to entities

 - Every now and then run:
 - process-entities-mods job:
   select * from (select MAX(id), MAX(`data`) as data_column, entity_id, entity_type, `name` from event_store
   where entity_type="bucket" or entity_type="question" and `name`="record-updated"
   group by entity_type, entity_id,`name` order by MAX(id)) as result where result.data_column not like "%\"processed\":1%"

   Which gets us all modded entities since last time the job ran.

 - For every entitiy that's not a replica (or has track-primary=false) set all
   its replicas to synced=false (if track-primary=true)
 - For every entity that's a replica set synced=false (if track-primary=true and
   primary-id is set)
 - Set 'processed' to true for all the entities we found as modded.


 - At one point we might want to sync replicas with their primaries.
   This might happen right after any mod, every minute/second, or day or week or
   as requested, or after running previous job.
 - In any case somehow and at some point the sync fn gets called with a subset of
   all entities to be synced (like all entities, or all entities of a group, or
   of a couple of groups, and/or entities with certain tags, and/or as selected by a user)
 - This might run in a job, on a separate server/worker. Just for one group, or
   for multiple groups, or for some other selection. Or for all. Or this sync fn
   might be called after the the process mods job, for all entities.

 - Query for all entities with synced=false within the collection

 - Go up the chain for an entity as high as possible within the collection,
   If in a chain an entity has autosync=false then the chain ends, and
   a new one begins.
   Then sync the highest unsynced entity in any chain with its primary, and down
   the chain, and down the tree.


***  Syncing a replica with its primary:
- Write primary entity's data to the replica's row. Take note
  of any sync settings on replica. Perhaps it only wants the t&t link updated
  and not the question, and or question type. Or keep any description on the
  sub. If auto-sync is off only set the primary-version prop to the primary's
  version. If they're equal primary and replica are in
  sync (or syncing hasn't run yet perhaps). Frontend can then show a notification
  on the entity. It's also possible to retrieve all entities where primary and
  replica version are unequal and show a list of entities to sync to the user.
- And for every replica: sync up links to sub entities as they are set on primary:
- Deal with these cases:
  - Primary has links to subs that replica doesn't,
    Create link(s) in sub's env, replicate any non existing subs if
    :link-extra-[sub]-on-sync is true. If link exists but is set to :unlinked
    then set :unlinked to false and set last_updated_user_id to null. If link
    doesn't exist add link, replicate sub first if needed.
    If then replica has settings that it doesn't want re-add removed links
    (:persist-unlinked-[sub]-on-sync):
    If the link actually exists but has unlinked/deleted set to true then don't
    do anything. If it doesn't exist then create it and link it,if the unlinked
    link has last_updated_user set to null set unlinked to false.
  - Replica has subs that primary doesn't.
    Remove links from replica if :unlink-unlinked-[sub]-on-sync
    If then replica has settings that it doesn't want remove added links
    (:persist-linked-[sub]-on-sync):
    You can look up the link, and look at last_updated_user_id. If it's set to
    some user then the user did it, so you leave it in place. A sync operation
    would set it to null. (Except perhaps when primary has the sub link as well, but in
    unlinked status. In that case you unlink it anyway)

- Creating a sub that doesn't exist yet means replicating the entire sub from
  primary env to the sub's env, so it's whole structure, not just content. So
  this isn't a sync, but a replication. And the replication fn is called for
  this.
- You make replicas of subs when you don't have access to the primary because it's not in your group.

If an entity is in your group you create a link to that instead. This way you
could replicate a replica within a group and for instance set
:persist-unlinked-[sub]-on sync to true and remove certain subs and have your
custom replica, and also still your perfect replica
-- Mark entity as 'synced'.

*** Push updates to replicas to any relevant logged in users.
We could/should do that for any updates really. Just table data.
*** OBSOLETE When editing a replica which primary has updated (so sync no is higher that the replica's one)
don't accept any updates, but return notification that a sync and/or refresh is
in order! Or just return updated info anyway if it's synced already.
*** OBSOLETE Sketch of an algorithm
- A mod comes in for an entity. A prop gets updated.
- The entity's version gets set to a new uuid/hash, or not
- A sub gets added, or removed. So a new link forged or removed using link table.
- Make sure parent entity's version gets assigned new hash/uuid as well. Maybe
  set it to nil, or otherwise if possible/available the calculated new hash
- This makes the parent entity out of sync with any replicas
- This might be happening to entities for a while
- Every so often run this job:
Event store:
select MAX(id), MAX(`data`), entity_id, entity_type, `name` from event_store where entity_type="bucket" group by entity_type, entity_id,`name` order by MAX(id)
126	126	2	bucket	record-updated
129	129 hash	1	bucket	record-updated
Chuck away the ones that have mods to the hash in their data column. What's left
are the ones that have not yet had their hash updated. Or rather not had their
field that records their subs by id updated??

Or use this query:
select * from (select MAX(id), MAX(`data`) as data_column, entity_id, entity_type, `name` from event_store
where entity_type="bucket" and `name`="record-updated" group by entity_type,
entity_id,`name` order by MAX(id)) as result where result.data_column not like "%synced"

For all updated entities if the last update didn't include an update to the hash
of the entity we calculate its hash. We then update all its replicas'
primary_hash column with this hash. After this we update the entity's hash
column with the calculated hash (if needed) but in any case set synced to true
so that the last event recorded in the event store includes 'synced' in the data column

- At one point we might want to sync primaries with their replicas.
  This might happen right after any mod, every minute/second, or day or week or
  as requested, or after running previous job.
- In any case somehow and at some point the sync fn gets called with a subset of
  all entities to be synced (like all entities, or all entities of a group, or
  of a couple of groups, and/or entities with certain tags, and/or as selected by a user)

- Within this group select all the entities that have their hash different from
  their primary-hash, and track-primary=true.
- Within this group, fetch all their primaries, get their primaries as well, and
  so on, till no result comes back anymore.

- So, take any replica, go to the its primary, or the primary's primary up the chain till you
  find the first primary, or the first primary that is not in the collection to
  process, or the first primary that has syncable not set to true.
- Sync up all its replicas, as far as they are in our collection.
- do a select * from entity where primary_id=[entity.id] and
  version-id!=[entity.version-id] and track_primary=true and [in scope]

- For every replica you sync, if it has any replicas itself within the
  collecion sync those up as well, recursively down the chain.
- This takes care of all replicas of one tree (with the on unique uuid), as far
  as they are in our collection. In the end this (sub)tree of entities should
  have the same 'version'. Which is an uuid
- Take next replicate that's not processed yet.

  Syncing a replica with its primary:
- For every replica: write primary entity's data to the replica's row. Take note
  of any sync settings on replica. Perhaps it only wants the t&t link updated
  and not the question, and or question type. Or keep any description on the
  sub. If auto-sync is off only set the primary-version prop to the primary's
  version. If they're equal primary and replica are in
  sync (or syncing hasn't run yet perhaps). Frontend can then show a notification
  on the entity. It's also possible to retrieve all entities where primary and
  replica version are unequal and show a list of entities to sync to the user.
- And for every replica: sync up links to sub entities as they are set on primary:
- Deal with these cases:
  - Primary has links to subs that replica doesn't,
    Create link(s) in sub's env, replicate any non existing subs if
    :link-extra-[sub]-on-sync is true. If link exists but is set to :unlinked
    then set :unlinked to false and set last_updated_user_id to null. If link
    doesn't exist add link, replicate sub first if needed.
    If then replica has settings that it doesn't want re-add removed links
    (:persist-unlinked-[sub]-on-sync):
    If the link actually exists but has unlinked/deleted set to true then don't
    do anything. If it doesn't exist then create it and link it,if the unlinked
    link has last_updated_user set to null set unlinked to false.
  - Replica has subs that primary doesn't.
    Remove links from replica if :unlink-unlinked-[sub]-on-sync
    If then replica has settings that it doesn't want remove added links
    (:persist-linked-[sub]-on-sync):
    You can look up the link, and look at last_updated_user_id. If it's set to
    some user then the user did it, so you leave it in place. A sync operation
    would set it to null. (Except perhaps when primary has the sub link as well, but in
    unlinked status. In that case you unlink it anyway)

- Creating a sub that doesn't exist yet means replicating the entire sub from
  primary env to the sub's env, so it's whole structure, not just content. So
  this isn't a sync, but a replication. And the replication fn is called for
  this.
- You make replicas of subs when you don't have access to the primary because it's not in your group.
If an entity is in your group you create a link to that instead. This way you
could replicate a replica within a group and for instance set
:persist-unlinked-[sub]-on sync to true and remove certain subs and have your
custom replica, and also still your perfect replica
- We set version of replicate to version of primary once replicate is
  properly synced.
- If we actually updated the entity, and/or removed/added any subs then we
  update the version of the entity as well.


** Modifications to dc app:
*** Selecting a template
In frontend offer 2 mechanisms:
- The old way of doing things, so pick a regular template as linked to the user
- Offer alternative ui where all template qbuckets of group are available,
  filtered by linked to user, tags, search field, linked to dossier type, status
  of dossier, whatever, etc. Offer all as defined in group, and in all repos
  group has access to.
*** RAILS: Instantiating a template the new way
Create answers as usual, linked to a new checklist row, but now from the qbucket
template, only create answers for qbuckets that have extra set to false.
*** RAILS: Adding extra categories
Pick all sub qbuckets with extra set to true
*** FRONTEND use path of qbuckets (minus template bucket) in the grey bars.
b1
 q1
 q2
 b11
   q3
   q4
 b12
   q5
   q6
b2
 q7

becomes:
b1
q1
q2
b1 b11
q3
q4
b1 b12
q5
q6
b2
q7
*** Research how dc app replies to http://localhost:5000/api/v2/checklists/1/categories currently
Which returns list of categories as linked to templates that are linked to the
template of the checklist
*** RAILS: Research how dc app generates the answers for extra categories currently
*** But a checklist will just function as normal, regardless of which template it was made from.
*** Currently dc app brings edits in order for both categories and questions through to instantiated checklists!

** You could make a limited editor just for DC to edit questions as linked to templates-categories
Possibly also to edit template content, order and content on categories. But not
linking, drag drop questions as they are linked to categories via their link table.


* tech and how-to
** links
https://github.com/atlassian/react-beautiful-dnd
use
https://clojurescript.org/news/2018-03-26-clojurescript-command-line
and/or shadow-clj

A Ring middleware for frontend performance optimization:
https://github.com/magnars/optimus
https://cjohansen.no/optimized-optimus-asset-paths-clojurescript/

** import questiontree template
DATABASE_URL=mysql2://localhost/chin_dev rails c
ChecklistTemplateUpdateWorker.new(nil, nil, nil)._perform(344232)


** import npm modules
   https://anmonteiro.com/2017/03/requiring-node-js-modules-from-clojurescript-namespaces/
   https://clojurescript.org/news/2017-07-12-clojurescript-is-not-an-island-integrating-node-modules
** using react components with om-next
   https://github.com/compassus/omify
   https://stackoverflow.com/questions/35675935/mixing-pure-react-components-with-om-next
** react tree
-   Collection of tree view components for front-end frameworks.
https://github.com/elbywan/bosket
https://elbywan.github.io/bosket/react/index.html#TreeView#Demo


-   https://github.com/fritz-c/react-sortable-tree
  https://fritz-c.github.io/react-sortable-tree/

-  https://github.com/pqx/react-ui-tree
  https://pqx.github.io/react-ui-tree/

- https://alarie.github.io/draggable-react-tree-component/#examples

** herb css styling lib
https://github.com/roosta/herb
http://herb.roosta.sh/#intro

* spec
** database schemas
*** Sql no templates table
 #+BEGIN_SRC ditaa :file sql-schema-no-templates.png

                                     +--------------------------+               +---------------+
                                     |                          |               |    users      | This affects the lists of categories a user can pick from.
                                     |   categories_users       |               |               |
                                     |                          +-------------->|    id         |
             +-----------------------|   category_id, user_id   |               |               |
             |                       |                          |               |               |
             |                       +--------------------------+               +---------------+
             |
             |
             |
             |
             |
             |  +------------------------------+
             |  |  categories_categories       |
             |  |                              |
             |  |  category_id sub_category_id |
             |  |                              |
             |  |  order, extra                |
             |  +-+---+------------------------+
             |    |   |
             |    |   |
             |    |   |
             v    v   v
           +-+-----------------+             +---------------------+-------------+----------------+--+------------------+
           | categories        |             |  categories_question|             |                | q|estions           |
           |                   |<------------| --------------------+-------------+--------------- |  |                  |
           | id, name,         |             |  category_id, questi|n_id, order  |--------------->| i|                  |
           |                   |             |                     +-------------+----------------+--+                  |
           +-------------------+             |                                   |                |                     |
               ^                             +-----------------------------------+                +---------------------+
               |
       +------------------------------------------+
       |   checklist                              |     tent_checklist_subject_id is used to lookup template to create checklist!!!-
       |                                          |     dc app sends this instead of template_id!!!
       |   tent_checklist_subject_id,category_id |     rails backend allows creating checklists from templates not linked to user in templates_users
       |                                          |     if created from tent_checklist_subject_id, see v1/checklistlist_controller and models/checklist.rb
       +------------------------------------------+
 #+END_SRC

 #+RESULTS:
 [[file:sql-schema-no-templates.png]]

*** sql schema modified
 #+BEGIN_SRC ditaa :file sql-schema-modified.png

                                     +--------------------------+               +---------------+
                                     |                          |               |    users      | This affects the lists of templates a user can pick from.
                                     |   templates_users        |               |               | Templates linked to a chosen template can still supply categories.
                                     |                          +-------------->|    id         |
             +-----------------------|   template_id, user_id   |               |               |
             |                       |                          |               |               |
             |                       +--------------------------+               +---------------+
             |
             v                         +-----------------------------------+
       +-----------+                   |  templates-templates              | All categories of all templates linked to a specific template
       | templates |<------------------|                                   | are available as "New Category" templates in the checklist made that template.
       |           |<------------------| templateid,extra-template-id      | So their answers can be added to the checklist in the DC app.
       | id,name   |                   |                                   |
       | tent_subject_id |             +-----------------------------------+
       +-----------+
        ^    ^
        |    |
        |    |
        |    |  +------------------------------+
        |    |  |  categories_categories       |
        |    |  |                              |
        |    |  |  category_id sub_category_id |
        |    |  |                              |
        |    |  |  order, extra                |
        |    |  +-+---+------------------------+
        |    |    |   |
        |    |    |   |
        |    |    |   |
        |    |    v   v
        |  +-+-----------------+             +-----------------------------------+                +---------------------+
        |  | categories        |             |  categories_questions             |                | questions           |
        |  |                   |<------------|                                   |                |                     |
        |  | id, name,         |             |  category_id, question_id, order  |--------------->| id                  |
        |  | template_id       |             |                                   |                |                     |
        |  +-------------------+             |                                   |                |                     |
        |                                    +-----------------------------------+                +---------------------+
        |
       +------------------------------------------+
       |   checklist                              |     tent_checklist_subject_id is used to lookup template to create checklist!!!-
       |                                          |     dc app sends this instead of template_id!!!
       |   tent_checklist_subject_id,template_id  |     rails backend allows creating checklists from templates not linked to user in templates_users
       |                                          |     if created from tent_checklist_subject_id, see v1/checklistlist_controller and models/checklist.rb
       +------------------------------------------+
 #+END_SRC

 #+RESULTS:
 [[file:sql-schema-modified.png]]

  Copy templates to categories, id and name only, fill in from_template_id with
  template_id, set is_template to true.
  All categories with that template_id add to categories_categories ->
  category_id (new id of category made from that template) and sub_category_id
  (category with template_id of that template)

  For each templates-templates row
  Take all categories of the extra template, add rows to categories_categories
  with:
 category_id (category with from_template_id == template_id)
 sub_category_id (category ids of the extra template)

 All checklists with that template_id, set category_id to id of category from the template

 So:
 For each template:
 Copy to categories.
 Set from_template_id to template's id.
 Set is_template to true.
 Find all categories where template_id == template's id
 For each category:
 Add to categories_categories:
 (category_id, subcategory_id, order, extra) =
 (template's category id, category_id, order, false)
 where order is sequential after sorting categories by lowercased name (as in dc frontend).
 see checklist show controller.
 Find all extra_templates:
 For each:
 Find all categories where template_id == extra_template_id
 For each category:
 Add to categories_categories:
 (category_id, subcategory_id, order, extra) =
 (template's category id, category_id, order, true)
 where order is incremented from highest sofar.

 For all checklists where template_id is template's id:
 Set category_id to template's category id.

 Get all users for template from templates_users
 Add to categories_users with category_id template's category id




*** qbuckets

 #+BEGIN_SRC fundamental

                                     +--------------------------+               +---------------+
                                     |                          |               |    users      | This affects the lists of templates a user can pick from.
                                     |   templates_users        |               |               | Templates linked to a chosen template can still supply qlists.
                                     |                          +-------------->|    id         |
             +-----------------------|   template_id, user_id   |               |               |
             |                       |                          |               |               |
             |                       +--------------------------+               +--------+------+
             |                                                                           ^
             v                         +-----------------------------------+             |
       +-----------+                   |  templates-templates              | All qlists of all templates linked to a specific template
       | templates |<------------------|                                   | are available as "New Qlist" templates in the checklist made that template.
       |           |<------------------| templateid,extra-template-id      | So their answers can be added to the checklist in the DC app.
       | id,name   |                   |                                   |             |
       | tent_subject_id |             +-----------------------------------+             |
       +-----------+                                                                     |
        ^    ^                                                                           |
        |    |                                                                           |
        |    |                                                                           |
        |    |  +------------------------------+                                         |
        |    |  |  qbuckets_qbuckets           |                              +----------+-----------------+
        |    |  |                              |                              |                            |
        |    |  |  qlist_id sub_qlist_id       |  -                      -----+                            |
        |    |  |                              |<-----------------------/     |    qbucket_id, user_id     |
        |    |  |  order, extra                |                              |                            |
        |    |  +-+---+------------------------+                              +----------------------------+
        |    |    |   |
        |    |    |   |
        |    |    |   |
        |    |    v   v
        |  +-+-----------------+             +-----------------------------------+                +---------------------+
        |  | qbuckets          |             |  qbuckets_questions               |                | questions           |
        |  |                   |<------------|                                   |                |                     |
        |  | id, name,         |             |  qlist_id, question_id, order     |--------------->| id                  |
        |  | template_id       |             |                                   |                |                     |
        |  +-------------------+             |                                   |                |                     |
        |                                    +-----------------------------------+                +---------------------+
        |
       +------------------------------------------+
       |   checklist                              |     tent_checklist_subject_id is used to lookup template to create checklist!!!-
       |                                          |     dc app sends this instead of template_id!!!
       |   tent_checklist_subject_id,template_id  |     rails backend allows creating checklists from templates not linked to user in templates_users
       |                                          |     if created from tent_checklist_subject_id, see v1/checklistlist_controller and models/checklist.rb
       +------------------------------------------+
 +----+
 #+END_SRC
  Copy templates to qlists, id and name only, fill in from_template_id with
  template_id, set is_template to true.
  All qlists with that template_id add to qlists_qlists ->
  qlist_id (new id of qlist made from that template) and sub_qlist_id
  (qlist with template_id of that template)

  For each templates-templates row
  Take all qlists of the extra template, add rows to qlists_qlists
  with:
 qlist_id (qlist with from_template_id == template_id)
 sub_qlist_id (qlist ids of the extra template)

 All checklists with that template_id, set qlist_id to id of qlist from the template

*** sql schema current
 #+BEGIN_SRC ditaa :file sql-schema-current.png
                                     +--------------------------+               +---------------+
                                     |                          |               |    users      | This affects the lists of templates a user can pick from.
                                     |   templates_users        |               |               | Templates linked to a chosen template can still supply categories.
                                     |                          +-------------->|    id         |
             +-----------------------|   template_id, user_id   |               |               |
             |                       |                          |               |               |
             |                       +------+-------------------+               +---------------+
             |
             v                         +-----------------------------------+
       +-----------+                   |  templates-templates              | All categories of all templates linked to a specific template
       | templates |<------------------|                                   | are available as "New Category" templates in the checklist made that template.
       |           |<------------------| templateid,extra-template-id      | So their answers can be added to the checklist in the DC app.
       | id,name   |                   |                                   |
       | tent_subject_id |             +-----------------------------------+
       +-----------+
        ^      ^
        |      |
        |      |
        |  +---+---------------+             +-----------------------------------+                +---------------------+
        |  | categories        |             |  categories_questions             |                | questions           |
        |  |                   |<------------|                                   |                |                     |
        |  | id, template_id   |             |  category_id, question_id         |--------------->| id                  |
        |  | name              |             |                                   |                |                     |
        |  +-------------------+             |                                   |                |                     |
        |                                    +-----------------------------------+                +---------------------+
        |
       +------------------------------------------+
       |   checklist                              |     tent_checklist_subject_id is used to lookup template to create checklist!!!-
       |                                          |     dc app sends this instead of template_id!!!
       |   tent_checklist_subject_id,template_id  |     rails backend allows creating checklists from templates not linked to usr in templates_users
       |                                          |     if created from tent_checklist_subject_id, see v1/checklistlist_controller and models/checklist.rb
       +------------------------------------------+

 #+END_SRC

 #+RESULTS:
 [[file:sql-schema-current.png]]




** Bilby admin checklist template editor spec
*** Terms
**** - (Checklist) template
 Collection of categories of questions, can be 'instantiated' as a new checklist in
 DC app.
****  Checklist
 Instantiated checklist template, so a checklist row and all answers for the
 questions have been generated as specified by the template.
**** Category
 A grouping of questions. The same question can be in more than category
**** Copying, replicating and linking
Copying duplicates something, as if the entity is created from scratch

Replicating also copies something, in the sense that a new entity is created, but a
link to the original is retained through a primary_id column so that changes
in the original can be monitored and possibly synced down from the primary to the replica.

Linking just links an entity once more to another parent entity. Changes in
original are carried through to the 'copy'. They mirror eachother at all times.
This is because we reuse an entitiy by linking it via a many-many join to
several other entities.


*** Aim
 Built a checklist templates editor in bilby admin that replaces functionality that's currently in T&T.
*** Security
 - Each group will have its own questions, templates and categories, which means
   that they will each will get a group-id prop.
 - Sometimes templates should also be still only accessible to certain users.
*** Share templates
 - Sharing templates/categories/questions means copying them for another group,
   and updating their group-id prop.
 - This is also the way group 10 (DC) will set up new clients. So by giving a
   group its own set of templates/categories/questions (and joins).
 - If the question gets updated by DC an alert should go out to all groups that
    have a copy of the question. Use event sourcing when it exists. If practical
    also display this as some kind of alert on the template/category/question, or
    even make it possible to filter on them, plus perhaps an alert in top level
    ui if any can be updated.
 - Updating a question means copying the DC version once more to the group's
    version, resetting out any customization. Within the session the generic
    undo/redo will let user revert back to customization, even after saving.
 - Implementation wise all questions might be linked to a 'original' question,
    which is the question it's been copied from.
 - Users should be able to clone their own questions, 'original' question link
    will be to a question of their own. Once access to the original group
    question expires it will be possible to remove/inactivate all group's cloned
    questions, even clones of clones. However nothing stops a group from manually
    copying another shared group's questions. (copy-paste or through a script,
    using bilby api)
 - This mechanism might in the future enable a kind of marketplace for (DC and
   thirdparty) content
*** TODO Layout -> Update!!!
    Basically only three 'panels':
***** Search and listing of questions and categories
 - All powerful, intuitive and yet simple in design.
 - A search box and four buttons: sort, filter, field and reset
 - Sort and filter as in current admin, field will let narrow search to one or
   more specific table columns.
 - Filter will let you also select categories or questions, a la radio button.
   One and only one of them always has to and will be selected
 - Select multiple questions/categories by control-click, or ticking box. Select
   all button/checkbox above list.
 - When selecting multiple categories/questions relevant editor will display
   identical values as normal, divergent values as `"<<multiple values>>"`
   v1;v2;v3;..;vn"
 - Drag one or (multiple selected) categories or questions into category/template
   editor. Questions will be linked to (sub)category.
 - Each item (question or category) will be have an easy to grab drag button on the
   right. Clicking outside this drag button will select it. This to avoid
   accidental selection when you just want to drag.
 - Display of categories is hierarchical. Right? Because we can have
   subcategories with the same name. Perhaps (optionally) list questions in
   each category as well? .
 - Perhaps a button that cycles from categories tree only, to categories tree
   with questions as leaves, to questions only.
***** A category/template editor
 - Fields: name, tag(s) Template will have also valid-from and valid-till.
 - New field: description/notes. In a content marketplace you would want to set a
   price as well. And a publish checkbox.
 - Autocomplete prompting for name
 - Possibly checkbox to promote/demote category to template status.
 - New category button and new question button right top.
 - Underneath a scrollable list of questions (hierarchically?) grouped by category.
 - Categories can collapse/expand
 - To the right of every category line a button to make it 'optional/extra'. So
   it'll show up as 'New category' in the DC app, and its questions won't be
   instantiated immediately on checklist creation.
 - Clicking on question opens it in question editor. Either in panel to the
   right, or replacing category editor.
 - Drag group(s) or question(s) from question/category list on the left into
   category editor
 - Drag and drop categories and questions to order and group them
 - A 'clone' button. It clones category up to n times. Each clone has the same
   questions linked to it, the name is the original one plus (1), (2).. (n). They
   will be listed on the top of category listing on left.
 - Cloning a category also clones the subcategories, recursively. So you end up
   with a cloned category tree with the same questions that were linked to the
   original category now linked to each cloned category as well.
 - A share button. This copies category/template, subcategories, their joins and
   questions to another group.
 - A button to set user access. In other words, to add join to templates-users table.
***** A question editor
 - Edit all the regular fields: answer-choices, answer-type, article, comment,
   created-at, deleted, entry-at, expired-at, explanation, id, lawcat-link,
   letter-text-default, letter-text-offence, letter-text-undoing, priority,
   question, regulation, regulation-name, tent-question-id,
   tent-question-subject-id, updated-at
 - Add field tags to question table (and field in editor)
 - Ease entering of data as much as possible
 - autocomplete prompting when possible, for example for tags
 - dropdown boxes for fixed answers,
 - inline selecting/searching/displaying  lawcat link,
 - if dc has a mini lawcat, easy selecting of relevant text from this table.
 - easy answer-choices editor.
 - clone text content from question to letter-text-offence and letter-text-undoing
 - A list of all categories the question is grouped under. Click to open category
   editor for clicked category. Remove button/icon for each category to remove question
   from the category.
 - A share button. This copies the question to another group.



*** Notes
 - Importing/reading in of law text pdf is part of the feature, but developed
   separately, it also will have its ui/page. This does not affect the templates
   editor, though the fields, categories etc will need to be in the form that
   templates editor will create them itself. They can then be edited after the
   import in the templates editor with no problem.
 - Templates are a kind of root category. Unlike normal categories they can be
   instantiated into a checklist.

*** Considerations
 - Preferably as little change to DC app as possible, both front and backend
 - Dedicated templates editor is of course easier, but at the very least no loss
   of functionality/ease of use compared with the T&T/excel combo as currently
   used.
 - Existing checklists should stay exactly the same when template, questions
   and/or categories change in any way.
 - Pending PR orders questions, and groups categories in top/middle/bottom
   section. Templates editor will be able to order categories as well.
 - Migrate current access of templates by user. So they and their categories and
   questions will need to be copied and proper group-id set.
 - At the moment Kristian is organising his categories by including the path to
   the category to the category name. This is error prone and impractical, so
   it'd be useful to make this explicit by showing and editing categories in a
   tree like structure ui.
 - Super admins (group 10 users) can switch group in top right menu. Supergroup
   admins can switch between all groups they have access to. Group admins
   only see templates and questions of their group
 - (Super) group admins and super admins can set access for users to templates, so create
   a join between templates and users.
 - ui for sharing and revoking templates/questions/categories
*** Not sure yet
 - juridische grondslag: dropdown?
  Which field is this in a question?

 - mini lawcat in admin???
  Articles for questions will need to be entered. A whole bunch are still in T&T.
  Do we import them to DC? Or to lawcat? Which means lawcat would need to enable
  private 'company policies and procedures' managing. So eg only for Vodafone.

 - hierarchical categories: either use many-to-many categories table or deduce from
   category names tree structure, and enforce name format accordingly. Eg:
   category name could be c1 - subc - subsubc. In other words name is path to
   leaf from top level category

 - some mechanism to share a standard set of templates/questions with a group,
   perhaps by user from that group, 'trefwoorden' are used in T&T.


** Kristian shared docs
   § 5.1.2 Afvalverbrandings- of afvalmeeverbrandingsinstallatie
   https://docs.google.com/spreadsheets/d/1mbed4KufyZtyu_lI3MKnzxcaOlHLn12G7rLppn2-0CI/edit?ts=59789596#gid=501373994
   [DC] - Klanten - Checklistvragen importeren
   https://docs.google.com/spreadsheets/d/1098b4nmMzJOsGKNxO31rvZmUuivoumWYUKa-_J9T9sE/edit?ts=59785c36#gid=0
   [DC] - Artikelen importeren
   https://docs.google.com/spreadsheets/d/1t9fuaOuKj5Bez28ORXQH9kIroQyCN8W1QgCsQD9eZAQ/edit?ts=59785c15#gid=0
** Kristian/t&t workflow
 - Plonk/clone a bunch of questions in one swoop into multiple subcategories of
   the same name foo, but under different parent category.
   c1 - foo [q1 q2]
   c2 - foo [q1 q2]
   c3 - foo [q1 q2]
 - New workflow:
  Create new category foo
  Search for questions to add to foo
  Select all questions listed
  Drag all questions into category foo

  Then either:
  Create your n parent categories
  Select 1st parent category
  Search for foo category
  Drag into 1st parent category
  Do the same for rest of parent categories.

  Alternatively, create a convenience/temporary category bar.
  Create in bar n subcategories (the parent categories)
  Now search for foo category
  Don't select, but drag into each of the n subcategories of bar.

 Now you have n parent categories, each with the same foo subcategory. If this
 needs to be further finetuned select a foo category and add/remove questions. Or
 select a question in any of the foo categories, it'll show the categories it is
 linked to. Question can be removed from each of these categories here.

** more
*** slack

 en categorieen ook

 [12:17]
 Ik maak dat dan alvast in t&t

 [12:18]
 Michiel van Oosten Maar vragen kunnen in meerdere checklists gebruikt worden. Dus de volgorde is dan een eigenschap van de template, niet van de vraag.

 [12:19]
 En vragen kunnen dus gegroepeerd worden in categorieen. En daar ook een volgorde in hebben neem ik aan.

 [12:19]
 En : `But we will work with the numbers 1, 2 and 3. `

 [12:20]
 voor categorieen. Is dat verplichte volgorde dan?

 [12:20]
 Of aanrading.

 [12:22]
 Volgens mij moet over de implementatie een beetje nagedacht worden.  De checklist templates spec voor admin zou daar wel mee helpen.

 [12:39]
 Michiel van Oosten On thinking, the order belongs to the join from category to questions and from template to categories. So you can plonk any question in any category, in any place. And place any category in any template, in any place.

 [12:41]
 So you make a new, or pick an existing question. You drag/assign it to a (new or existing) category. Than you drag/assign categories to templates.

 [12:42]
 Unless you'd want to assign a question directly to a template. Without it being in a category. umm

 [12:45]
 So alternatively, you drag questions and/or categories directly to a template. Then you can tag/group questions as belonging to some kind of (new) category, on the fly.

 [12:46]
 Would categories of categories make any sense btw?

 [12:48]
 Then you could have only categories. And categories of categories (of categories). You can then 'publish' any category as a template.

 [12:53]
 With the problem remaining. How much/little to propagate changes in templates to existing checklists. And deal with validity based on date.

 [12:53]
 Lucas Oost Lievense
 lol that was exactly what I wanted to answer



 [12gg:54]
 Michiel van Oosten Templates you mean right. Not checklists

 [12:55]
 Lucas Oost Lievense
 yes

 [12:55]
 Michiel van Oosten Or rather, collections of ordered questions, grouped in categories.

 [12:55]
 Lucas Oost Lievense
 uh

 [12:55]
 good be that I mean that :stuck_out_tongue:

 [12:55]
 First this one: https://tekstentoelichting.nl/effacts/form?method=ListDisplay&id=15

 [12:55]
 Michiel van Oosten That's what you want you share and copy with other people.

 [12:56]
 Lucas Oost Lievense
 Ja, Nee, N.v.t. + Document = 170

 [12:56]
 Document = 171

 [12:56]
 Ff in NL

 [12:56]
 Michiel van Oosten Ok

 [12:56]
 Lucas Oost Lievense
 Want dit zijn soms lastige. Template is de selectie vragen die een admin of wij in DC hebben

 [12:57]
 toch?

 [12:57]
 Michiel van Oosten Zet de nummers in de branch

 [12:57]
 Ja

 [12:57]
 Lucas Oost Lievense
 Als gebruiker kies je een template om een checklist aan te maken

 [12:57]
 Michiel van Oosten En de volgorde is de tent_question_subject_id

 [12:58]
 Op het moment.

 [12:58]
 Lucas Oost Lievense
 Binnen een categorie

 [12:58]
 En categorieen op alfabetische volgorde

 [12:58]
 Michiel van Oosten Uhh, ja

 [12:59]
 Lucas Oost Lievense
 en jij wil voor de nieuwe admin in DC categorieen als template gaan behandelen?

 [12:59]
 Michiel van Oosten `collections of ordered questions, optionally grouped in ordered categories`

 [12:59]
 Zou mijn definitie zijn.

 [12:59]
 Lucas Oost Lievense
 Ok

 [12:59]
 Michiel van Oosten Waarom twee concepten voor de eindgebruiker.

 [12:59]
 Waarom niet gewoon 1

 [12:59]
 Lucas Oost Lievense
 ja dat wilde ik net zeggen

 [13:00]
 Het moet wel eenvoudig blijven

 [13:00]
 Michiel van Oosten En categories kunnen dan 'live' gemaakt worden of zoiets dergelijks.

 [13:01]
 De implementatie zou dan grotendeels hetzelfde blijven  onder the kap. Maar nieuwe templates-category table, en order columns in the join tables van templates->categories and categories->questions.

 [13:02]
 Denk ik. umm

 [13:05]
 Nee, templates->categories zou dan categories->categories worden. Met een flag op category record om hem 'live' te zetten. Zoiets. Maar goed. Implementatie detail.  Maar `collections of ordered questions, optionally grouped in ordered (optionally nested) categories` zie je wel zitten verder?

 [13:06]
 Dat laat open de mogelijkheid om categorieen van categorieen te maken bijv.

 [13:07]
 Lucas Oost Lievense
 Voelt voor een beheerder wat ingewikkeld. Maar dat is denk ik meer een kwestie van goede UI zoals je nu ook hebt gemaakt

 [13:07]
 En vergeet Nieuwe categorie niet :stuck_out_tongue:

 [13:09]
 Michiel van Oosten Ja. Dat hoef je niet uit te leggen. Een gebruiker zoekt/maakt vragen. En sleepts ze in een open box. En een knop om er een template van te maken en/of en category.

 [13:09]
 En dan krijg je dus lijsten van categorieen/templates. Die je ook weer in die box kunt slepen.

 [13:10]
 Lucas Oost Lievense
 Hmm ja ok. Dan is het eerder template nested in a template (naar beheerders toe)

 [13:10]
 Zo werken we nu met Nieuwe categorieen

 [13:10]
 Dat zijn eigenlijk bestaande checklisten die ze koppelen aan een andere template

 [13:11]
 Soms slechts vragen van 1 categorie soms een grotere checklist

 [13:11]
 Maar dan zou je dus alle vragen van “Categorie …” direct in je checklist kunnen toevoegen?

 [13:12]
 Michiel van Oosten Je bedoelt Nieuwe Category in de DC app. Dat inspecteurs ter plekke category kunnen toevoegen/verwijderen. Ja ok.

 [13:12]
 Lucas Oost Lievense
 template toevoegen moet ik zeggen

 [13:12]
 Ja precies

 [13:13]
 Michiel van Oosten Ok, dus als je een template maakt, dan sleep je die 'optionele' categorieen ook gewoon, en ook naar een bepaalde plek. Maar je vinkt ze aan dat ze 'optioneel' zijn. Dwz, ze gaan naar de 'Nieuwe categorie' aan de rechterkant in de DC app.

 [13:23]
 Lucas Oost Lievense
 Dat is ook een mooie

 [13:23]
 Nu moet je dus kiezen eigenlijk

 [13:23]
 Michiel van Oosten Dus ui is tweedeling. Links lijst van vragen en categorieen van vragen. Sorteer, zoek, filter (bijv laat alleen de categorieen zien, en/of de vragen van de categorien) , en maak nieuwe vragen. Rechts een lege doos. Sleep erheen, en sleep volgorde. Dat zou dan een willekeur en ik elke volgorde van vragen en categorieen. Met categorieen die je dan kunt uit/inklappen om het overzicht te houden. Erboven een edit box voor de naam, en een vinkje om hem beschikbaar te maken om checklists van te maken.

 [13:23]
 Lucas Oost Lievense
 Of voor of achter

 [13:23]
 Michiel van Oosten huh

 [13:24]
 Lucas Oost Lievense
 Nu moet je kiezen of je een categorie voor of achter wilt tonen (zien of optioneel)

 [13:24]
 Als je een vraag van een categorie in de checklist laat zien dan kan je de overige vragen niet meer als optioneel toevoegen

 [13:24]
 Dacht ik :stuck_out_tongue:

 [13:25]
 Oh kijk dit is wel een leuke om even te bekijken

 [13:25]
 https://tekstentoelichting.nl/effacts/form?method=SubjectDisplay&id=228293

 [13:26]
 Hij is dus echt zelf iets aan het opbouwen

 [13:26]
 Erg ingewikkeld zo te lezen :scream:

 [13:27]
 Michiel van Oosten Nou, categorieen worden gewoon iets heel 'luchtigs'. Dwz, als je maar 1 vraag van een category wil toevoegen, dan sleep of alleen die ene vraag, of je maakt snel even een category. Die je dan weer kan toevoegen aan de categorie die je wil publiceren als template.

 [13:28]
 Neem aan dat unsal bepaalde vragen van die nieuwe categoriy wil. Maar niet alle dan.

 [13:29]
 Wat bedoelt ie hiermee `Graag checklist P88480 kopiëren naar volgende cheklisten:`

 [13:29]
 Hoe kopieer je een checklist naar een checklist?

 [13:30]
 Hij bedoelt as extra categorie toevoegen?

 [13:30]
 Dan is ie inderdaad wel wat aan het opbouwen.

 [13:31]
 En dat zitten ze op DC allemaal met de hand te doen?

 [13:31]
 Lucas Oost Lievense
 Als het echt een kopie moet zijn dan kunnen ze dat per vraag doen

 [13:31]
 Of wij lezen het als nieuwe vragen in

 [13:31]
 ja :disappointed:

 [13:33]
 Michiel van Oosten Hij bedoelt vragen van de template van de eerste checklist toevoegen aan de templates van die eerste lijst van checklisten.

 [13:33]
 Maar goed, die ui lijkt me vrij recht door zee. Of wou je nog meer of minder van de templates editor.

 [13:34]
 vragen zijn gelinkt aan lawcat.

 [13:34]
 Voor de wets verwijzingen etc.

 [13:34]
 Dus een mooie vragen editor misschien. Of is het gewoon kwestie van vraag intypen, en link bijvoegen.

 [13:36]
 Je moet ze kunnen clonen denk ik.

 [13:36]
 And een of meerdere tags geven. Zodat je ze kunt zoeken op die tags.
*** collections of ordered questions, optionally grouped in ordered (optionally nested) categories
 Dus als je een template maakt, dan sleep je die 'optionele' categorieen ook
 gewoon, en ook naar een bepaalde plek. Maar je vinkt ze aan dat ze 'optioneel'
 zijn. Dwz, ze gaan naar de 'Nieuwe categorie' aan de rechterkant in de DC app.

 Dus ui is tweedeling. Links lijst van vragen en categorieen van vragen.
 Sorteer, zoek, filter (bijv laat alleen de categorieen zien, en/of de vragen
 van de categorien) , en maak nieuwe vragen. Rechts een lege doos. Sleep erheen,
 en sleep volgorde. Dat zou dan een willekeur en ik elke volgorde van vragen en
 categorieen. Met categorieen die je dan kunt uit/inklappen om het overzicht te
 houden. Erboven een edit box voor de naam, en een vinkje om hem beschikbaar te
 maken om checklists van te maken.







* All groups and template count
;; 71 Tinguely Xperts 0
;; 80 Werkorganisatie de Waard 0
;; 177 's-Hertogenbosch Bouwtoezicht (Niet gebruiken) 0
;; 49 Aa en Hunze 0
;; 121 Veiligheidsregio Noord- en Oost-Gelderland (VNOG) 1
;; 153 Inspectie Amsterdam 1
;; 60 Gemeente Westland 1
;; 27 DGS Group 1
;; 269 Stichting Kinderopvang Bussum, Naarden, Muiden en Muiderberg (SKBNM) 1
;; 204 Gemeente Woudenberg 1
;; 77 Brandweer Midden en West Brabant (MWB) 1
;; 119 Veiligheidsregio Utrecht (VRU) 1
;; 104 Janssen NV 1
;; 251 Ringonderzoek ziekenhuizen 1
;; 117 Veiligheids-en Gezondheidsregio Gelderland-Midden (VGGM) 1
;; 33 Servicebureau gemeenten 1
;; 41 Kloster Eberbach 1
;; 187 Odion 1
;; 118 Woonbedrijf 1
;; 100 Topaz Overduin 1
;; 243 Theodoor Gilissen 1
;; 231 Boekel 1
;; 44 Proefabonnees 1
;; 198 Overheid & ICT 1
;; 34 Den Helder 1
;; 97 AFM 1
;; 145 Adviesbureau Munnik 1
;; 98 Slim Geregeld Goed Verbonden (SGGV) 1
;; 124 Agri Retail 1
;; 209 Porsche Import 1
;; 199 IMS Gear 1
;; 190 Meppel 1
;; 273 IGZ - Medisch Specialistische Zorg (MSZ) 2
;; 233 Boxmeer 2
;; 110 Movares 2
;; 224 Boels 2
;; 101 Nuchter 2
;; 102 A.Hakpark 2
;; 55 SKO bodem 2
;; 149 Casade 2
;; 157 Wolter & Dros 2
;; 50 Asito 2
;; 75 Zevenaar 2
;; 31 Tilburg 2
;; 129 Brandweer Maas en Waal 2
;; 91 Brandweer Bergen (NH) 2
;; 13 Regionale Milieudienst West-Brabant (RMD) 2
;; 22 Provincie Zuid-Holland 2
;; 257 IGZ - Verpleging 2
;; 168 Oostendorp 2
;; 25 Arnhem 2
;; 125 Roxit 2
;; 107 Greens-international 2
;; 23 DWA Installatie- en energieadvies 2
;; 140 Sagro 2
;; 183 Veiligheidsregio Twente 2
;; 62 Infomil 3
;; 86 Nederlandse Voedsel- en Warenautoriteit (NVWA) 3
;; 172 Croon 3
;; 19 Milieudienst West-Holland (mdwh) 3
;; 265 Omgevingsdienst Flevoland & Gooi en Vechtstreek (OFGV) 3
;; 160 Engage 3
;; 96 Bam Leidingen & Industrie 3
;; 114 Brandweer Zaanstad 3
;; 253 IGZ - Bloed en Weefsel 3
;; 42 Olst Wijhe 3
;; 8 Brandweer Amsterdam 3
;; 154 DCMR - Meldkamer 4
;; 24 Provincie Noord-Holland 4
;; 113 DAR Bouwadvies 4
;; 237 Noorderlinge 4
;; 29 Rijssen-Holten 4
;; 134 ESRI 4
;; 266 Telbo 4
;; 26 SIKB 4
;; 141 Leudal 5
;; 137 Hunze en Aa's 5
;; 166 DOW 5
;; 148 De Stichtse Rijnlanden (HDSR) 5
;; 236 Effacts 5
;; 52 Rheden 5
;; 167 Priktima 6
;; 195 Brandweer Fryslan 6
;; 280 IGZ - Team MKI 6
;; 230 OOM-milieumanagement 6
;; 78 Noorderzijlvest 6
;; 262 Dura Vermeer 7
;; 258 Transport en Logistiek Nederland (TLN) 7
;; 36 Tata Steel 8
;; 103 Voith 8
;; 194 Deventer 8
;; 246 Amsterdam Oost - Handhaving Openbare Ruimte 8
;; 116 Borsele 9
;; 143 hoogeveen 9
;; 93 Sodexo Altys 9
;; 279 DHW - Regio Hilversum 9
;; 127 Deurne 9
;; 115 Zoetermeer 9
;; 126 Middendelfland 9
;; 30 Hengelo 9
;; 144 Omgevingsdienst Midden Holland (ODMH) 10
;; 189 Horyon 10
;; 155 Laarbeek 10
;; 152 Hoogezand-sappemeer 10
;; 200 Omgevingsdienst regio Utrecht 10
;; 63 Waternet 10
;; 7 Haarlem 11
;; 223 Utrecht 11
;; 250 Instituut voor Bouwkwaliteit 11
;; 248 SAIL Amsterdam 2015 11
;; 158 Honeywell 11
;; 212 Lansingerland 11
;; 58 Maastricht 12
;; 39 Ooststellingwerf 12
;; 239 RUD Zeeland 12
;; 234 Ekro 12
;; 43 Lisse 12
;; 226 Gemeente Uden 13
;; 156 Best 13
;; 278 Hilvarenbeek 13
;; 277 Medline 13
;; 9 ROKA milieu consultancy 13
;; 249 Helmond 14
;; 208 RUD Noord-Holland Noord 14
;; 268 Loon op Zand 14
;; 242 Giant At Work 15
;; 235 Bonaire 15
;; 133 Goes 15
;; 272 ABG Gemeenten 15
;; 275 IGZ - Afdeling Gehandicaptenzorg en Forensische Zorg 16
;; 197 Nieuwegein 16
;; 238 Gemeente Overbetuwe 16
;; 67 Yarden 16
;; 193 Vodafone 17
;; 270 Demo 17
;; 94 Synned 17
;; 130 Nederlandse Praktijkschool voor Bouw en Milieu 18
;; 146 DOC Zuivel 18
;; 245 Kramp 18
;; 221 Amsterdam Nieuw West 20
;; 220 Amsterdam 20
;; 229 Stadsdeel Zuidoost 21
;; 88 Tynaarlo 21
;; 182 IGZ - Mondzorg 21
;; 216 Bernheze 21
;; 215 Vught 21
;; 255 Privacy Valley 21
;; 219 Handheld 23
;; 66 Gemeente SWF 23
;; 267 Provincie Overijssel 24
;; 222 Motion 10 24
;; 37 Velsen 24
;; 206 Prysmian 25
;; 15 Emmen 25
;; 139 Provincie Gelderland 25
;; 120 Valkenswaard 25
;; 73 Maassluis 25
;; 161 Maandag 26
;; 132 Tytsjerksteradiel 27
;; 264 Waterschap Zuiderzeeland 28
;; 109 Brandweer Brabant Noord (BRWBN) 28
;; 35 SRE Milieudienst 29
;; 171 Haaren 29
;; 217 Sint-Michielsgestel 31
;; 135 Waterschap Rijn en IJssel (WRIJ) 32
;; 218 Landerd 33
;; 128 Stichting BWTOpleiding.nl 33
;; 169 Ons Buro 33
;; 84 BP 33
;; 213 Inspectie Militaire Gezondheidszorg Ministerie van Defensie 34
;; 254 Gemeente Putten 34
;; 188 Rotterdam 36
;; 261 HEINEKEN Nederland Supply - Zoeterwoude 36
;; 20 Den Haag 38
;; 256 Fryske Utfieringstsjinst Miljeu en Omjouwing 38
;; 72 Kampen 40
;; 203 Omgevingsdienst Midden- en West-Brabant 40
;; 4 Omgevingsdienst Noordzeekanaalgebied, locatie Haarlemmermeer 41
;; 164 Hoorn 42
;; 196 Boxtel 42
;; 40 Assen 44
;; 46 REM 45
;; 207 KWS 45
;; 105 Doetinchem 45
;; 180 Capelle aan den IJssel 46
;; 274 Bio Energie Ede 47
;; 11 Stadsdeel Zuid 47
;; 32 Aa en Hunze 50
;; 90 Stadsdeel West 50
;; 173 NZKG Afdeling Bodemtoezicht 51
;; 260 Gemeente De Fryske Marren 52
;; 123 Eindhoven 52
;; 271 RUD Limburg Noord 56
;; 106 Mook en Middelaar 60
;; 69 Hilversum 66
;; 17 Maasdriel 68
;; 45 Noordenveld 68
;; 232 Smallingerland 69
;; 38 Heerenveen 76
;; 56 Amsterdam Centrum 77
;; 142 Houten 79
;; 21 Amsterdam-Noord 81
;; 28 Zwolle 82
;; 240 RUD Zuid Limburg 88
;; 176 VBG 88
;; 108 Oss 96
;; 89 Regionale Uitvoeringsdienst Drenthe 116
;; 247 Veinsur 126
;; 259 Burgerzaken 127
;; 241 Omgevingsdienst Groningen 127
;; 263 DC Test 128
;; 131 Meierijstad 129
;; 191 Betabit 133
;; 201 Test Company 135
;; 192 Omgevingsdienst Regio Nijmegen 141
;; 14 Decos 141
;; 165 Omgevingsdienst Achterhoek (ODA) 143
;; 174 NZKG Afdeling Bouwtoezicht (BWT) 148
;; 227 HVC 150
;; 1 Ongekoppelde gebruikers 153
;; 2 Omgevingsdienst Noordzeekanaalgebied 156
;; 225 De Ree Holland 157
;; 175 NZKG Afdeling Milieutoezicht 158
;; 211 Lifecycle Technology Ltd 163
;; 159 Omgevingsdienst Regio Arnhem (ODRA) 165
;; 228 Netwerk VSP 165
;; 163 Omgevingsdienst Zuidoost-Brabant (ODZOB) 169
;; 61 Omgevingsdienst Rivierenland 178
;; 181 Heineken 187
;; 6 Omgevingsdienst de Vallei 187
;; 170 BMD Advies 190
;; 12 DCMR 205
;; 179 Verwijderen 214
;; 162 Stadsdeel Oost 249
;; 53 Omgevingsdienst Brabant Noord 331
;; 16 's-Hertogenbosch 370
;; 3 Milieudienst IJmond 413
;; 10 Digitale Checklisten 520
;; 19-03-05 13:09:26 beaver INFO [templates.migrate:570] - Total to sync: 9735


* OBSOLETE
** OBSOLETE Mechanism to update a bucket tree without mods getting propogated.
- This only applies when an entitity has any replicas, and syncable is set to true.
1. Set syncable to false on all entities of tree, set published to false to root
   of tree.
   -> This allows editing of the tree without any of the changes getting picked
   up till syncable is set to true again for all entities. But it involves
   setting syncable to false for potientially a lot of entities. Also taking the
   template 'offline' is not ideal. Leaving it online means any intermediate
   editing changes get copied to new replicas in the mean time. Meaning they get
   a 'wip' template. Which will not get updated till syncable is set to true
   again for the tree.
   ->> NO GOOD
2. ->> LEAVE PUBLISHED AND SYNCABLE ALONE!!!!
3. So template needs to stay published, and not modified.
4. For little edits this is ok. A change of question phrasing, change of type,
   change of bucket name, description, ordering of question/bucket.
5. For an overhaul that you want to live edit, create a copy (not replica), call
   it v2, edit to your liking with published=false. Then retire the first
   version (published=false), so no new templates can be made with it, if it's a
   template. And also cannot be added to any more buckets in other groups. Maybe
   set a deprecated flag on it so people know to replace it with v2.
   --> DOABLE, BUT NOT IDEAL!!!!
6. Create little shadow copies of any entity. Edit that, then on commit copy
   changes to original. For editing props this is easy. If you change the
   order, or any other props on a link, or add links, or remove links you need
   to shadow copy the parent first. Edit that, and its links. Then on commit
   copy that (and its links) back to the original parent bucket.
   --> THAT COULD WORK
7. Or you could copy an entire tree for editing, which you copy back when done.
8. Or you always have a uneditable master copy, and a 'working copy'.
9. Use public repos!!!

* merge results:
Auto-merging version
DONE-CONFLICT (content): Merge conflict in version
Auto-merging test/clj/database/table/user_test.clj
Auto-merging test/clj/database/table/group_test.clj
DONE-CONFLICT (content): Merge conflict in test/clj/database/table/group_test.clj
Auto-merging src/workload/core.clj
Auto-merging src/websockets/dispatcher.cljc
Auto-merging src/parser/read.cljc
DONE-CONFLICT (content): Merge conflict in src/parser/read.cljc
Auto-merging src/parser/mutate.cljc
DONE-CONFLICT (content): Merge conflict in src/parser/mutate.cljc
Auto-merging src/event_store/domain.clj
Auto-merging src/elasticsearch/core.clj
Auto-merging src/dc_admin/backend/app/config.clj
DONE-CONFLICT (content): Merge conflict in src/dc_admin/backend/app/config.clj
Auto-merging src/database/table/user.cljc
Auto-merging src/database/table/template.cljc
Auto-merging src/database/table/group.cljc
Auto-merging src/database/table/field.cljc
Auto-merging src/database/sql/hug.sql
Auto-merging src/database/query_hooks.cljc
Auto-merging src/database/config.cljc
DONE-CONFLICT (content): Merge conflict in src/database/config.cljc
DONE-CONFLICT (modify/delete): src/cljs/reconciler/parser/read.cljs deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src/cljs/reconciler/parser/read.cljs left in tree.
DONE-CONFLICT (modify/delete): src/cljs/app/page_config.cljs deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src/cljs/app/page_config.cljs left in tree.
DONE-CONFLICT (modify/delete): src/cljs/admin_new/dev.cljs.edn deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src/cljs/admin_new/dev.cljs.edn left in tree.
DONE-CONFLICT (modify/delete): src/cljc/common/util.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src/cljc/common/util.cljc left in tree.
Auto-merging src/app/translation_keys.cljc
DONE-CONFLICT (content): Merge conflict in src/app/translation_keys.cljc
Auto-merging src-frontend/reconciler/app_state.cljs
Auto-merging src-frontend/components/users/page.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/users/page.cljs
Auto-merging src-frontend/components/translations/page.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/translations/page.cljs
Auto-merging src-frontend/components/login_screen.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/login_screen.cljs
Auto-merging src-frontend/components/link_entity_dialog.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/link_entity_dialog.cljs
Auto-merging src-frontend/components/helpers/defcmp_generic_functions.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/helpers/defcmp_generic_functions.cljs
Auto-merging src-frontend/components/groups/page.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/groups/page.cljs
Auto-merging src-frontend/components/dossier_types/fields.cljs
Auto-merging src-frontend/components/checklist_templates_users/page.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/checklist_templates_users/page.cljs
Auto-merging src-frontend/components/app_bar.cljs
DONE-CONFLICT (content): Merge conflict in src-frontend/components/app_bar.cljs
Auto-merging src-frontend/app/default_theme.cljs
Auto-merging src-dev/clj/try_sql_query.clj
DONE-CONFLICT (content): Merge conflict in src-dev/clj/try_sql_query.clj
Auto-merging src-dev/clj/try_om_query.clj
DONE-CONFLICT (content): Merge conflict in src-dev/clj/try_om_query.clj
DONE-CONFLICT (modify/delete): src-bilby/cljs/bilby/util.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/cljs/bilby/util.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/cljs/bilby/reconciler/parser/read.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/cljs/bilby/reconciler/parser/read.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/cljs/bilby/reconciler/parser/mutate_record.cljs deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/cljs/bilby/reconciler/parser/mutate_record.cljs left in tree.
DONE-CONFLICT (modify/delete): src-bilby/cljs/bilby/reconciler/parser/mutate_helpers.cljs deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/cljs/bilby/reconciler/parser/mutate_helpers.cljs left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/security.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/security.cljc left in tree.
CONFLICT (modify/delete): src-bilby/clj/bilby/parser/read.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/parser/read.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/parser.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/parser.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/validate_sql_fun.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/validate_sql_fun.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/query.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/query.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/process_result.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/process_result.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/process_params.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/process_params.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/inspect.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/inspect.cljc left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/hug.sql deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/hug.sql left in tree.
DONE-CONFLICT (modify/delete): src-bilby/clj/bilby/database/build_sql.cljc deleted in HEAD and modified in templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling. Version templates-users-admin-page-merged-with-calc-count-and-better-duplicate-email-handling of src-bilby/clj/bilby/database/build_sql.cljc left in tree.
Auto-merging release-notes.md
DONE-CONFLICT (content): Merge conflict in release-notes.md
Auto-merging bin/create-staging-image-on-otc
DONE-CONFLICT (content): Merge conflict in bin/create-staging-image-on-otc
Automatic merge failed; fix conflicts and then commit the result.

