{
 ;; Tasks
 :pagora.revolt.task/aot    {:exclude-namespaces ["pagora.revolt." "revolt."]
                          :extra-namespaces [;; mount.core
                                             clojure.tools.reader.reader-types
                                             ;; clojure.tools.logging.impl
                                             ]}

 :pagora.revolt.task/write-info   {:path "resources/build-info.json"}

 :pagora.revolt.task/update-html {:src-path "resources/app-template.html"
                               :dest-path "resources/app.html"

                               :dev {:load-user-ns true ;; add script link to app.html that loads the user namespace, also see figwheel-main.edn
                                     :include-build-info-in-html false
                                     :path "app"
                                     :app-name "Pagora"}
                               :prod {:load-user-ns false;; add script link to app.html that loads the user namespace, also see figwheel-main.edn
                                      :include-build-info-in-html true
                                      :path "app"
                                      :app-name "pagora"
                                      ;;TODO load from env!!
                                      :bugsnag-api-key-frontend "3464720f5367914849487b96cb428fc8" ;anything but nil adds the bugsnag script tag in app.html
                                      :bugsnag-api-key-server "d87f64fd8593faed9e04f531efc6a082"}
                               }

 ;;This should match the version in deps.edn!!!!!
 ;; :pagora.revolt.task/copy-newrelic-jar {:version "4.2.0"}
 
 :pagora.task/info   {:name "pagora-app"
                   :package pagora-app
                   :version "0.0.1"
                   :description "pagora app"}

 :revolt.task/test   {:report :pretty}

 :pagora.revolt.task/sass   {:source-path "scss"
                          :output-dir "public/app"}

 :pagora.revolt.task/assets {:assets-paths ["assets"]
                          :exclude-paths ["assets/app"]
                          :public-path "public/"
                          :gzip true
                          :update-with-exts ["html"]}

 :revolt.task/codox  {:source-paths ["src"]
                      :source-uri "http://github.com/mbuczko/revolt-edge/blob/{version}/{filepath}#L{line}"
                      :namespaces [edge.http
                                   edge.middleware]}

 :revolt.task/cljs   {:compiler {:output-dir "public/app/out"
                                 :asset-path "/app/out"
                                 :preloads [devtools.preload]

                                 :parallel-build       true
                                 :devcards             true
                                 :verbose              false
                                 :compiler-stats       true
                                 ;; :aot-cache            true
                                 :source-map-timestamp true

                                 ;; :npm-deps false
                                 ;; :install-deps true
                                 ;; :npm-deps {:xregexp "4.2.0"}

                                 ;; https://github.com/bhpagoraan/lein-figwheel/issues/88
                                 ;; :closure-defines {"goog.DEBUG" false}
                                 :recompile-dependents false

                                 :pretty-print         true

                                 :fn-invoke-direct true

                                 ;; :pseudo-names true

                                 :external-config      {:devtools/config {:features-to-install    [:formatters :hints]
                                                                          :fn-symbol              "F"
                                                                          :print-config-overrides true}
                                                        }
                                 :main "app.core"
                                 :output-to "public/app/app.js"
                                 ;; :modules {:cljs-base {:output-to "public/app/base.js"}
                                 ;;           ;; :vendor    {:entries #{re-frame.core}
                                 ;;           ;;             :output-to "scripts/vendor.js"}
                                 ;;           :main      {:entries #{app.core}
                                 ;;                       :output-to "public/app/dev.js"}}

                                 :infer-externs true
                                 :externs ["foreign-libs-externs.ext.js"
                                           "cryptojs.ext.js"
                                           "moment.ext.js"
                                           "react.ext.js"
                                           "react-dom.ext.js"]
                                 :foreign-libs [
                                                ;; {:file "foreign-libs/bugsnag.js" :provides ["js.npm.bugsnag"]}
                                                ;; {:file "foreign-libs/dragula.js" :provides ["js.dragula"]}

                                                ;;unused
                                                ;; {:file "node_modules/cryptojs/lib/Crypto.js"
                                                ;;  :provides ["cryptojs.core"]}
                                                ;; {:file "node_modules/cryptojs/lib/MD5.js"
                                                ;;  :provides ["cryptojs.md5"]
                                                ;;  :requires ["cryptojs.core"]}

                                                ;; Needed for snapshot tests and test-runner
                                                {:file "node_modules/alasql/dist/alasql.js" :provides ["pagora.js.alasql"]}
                                                {:file "node_modules/lz-string/libs/lz-string.js" :provides ["pagora.js.lz-string"]}
                                                ;; {:file "pagora/js/setImmediate.js" :provides ["pagora.js.setimmediate"]}
                                                {:file "pagora/js/diff_match_patch.js" :provides ["pagora.js.diff-match-patch"]}
                                                {:file "pagora/js/highlight.js" :provides ["pagora.js.highlight"]}
                                                {:file "pagora/js/vkbeautify.js" :provides ["pagora.js.vkbeautify"]}

                                                ;;webpacked:
                                                {:file "foreign-libs/index.bundle.js"
                                                 :provides ["react" "react-dom"
                                                            "material-ui"
                                                            "material-ui-styles"
                                                            ;; "material-ui-icons"
                                                            "dragula"
                                                            "bugsnag"
                                                            "moment"
                                                            "react-datetime"
                                                            "react-smooth-dnd"
                                                            "react-sortable"
                                                            "react-beautiful-dnd"
                                                            "atlas-kit-tree"
                                                            ]
                                                 :global-exports {
                                                                  react React
                                                                  react-dom ReactDOM
                                                                  material-ui MaterialUI
                                                                  material-ui-styles MaterialUIStyles
                                                                  ;; material-ui-icons MaterialUISvgIcons
                                                                  dragula Dragula
                                                                  bugsnag Bugsnag
                                                                  moment moment
                                                                  react-datetime ReactDatetime
                                                                  react-smooth-dnd ReactSmoothDnd
                                                                  react-sortable ReactSortable
                                                                  react-beautiful-dnd ReactBeautifulDnd
                                                                  atlas-kit-tree AtlasKitTree
                                                                  }}]
                                 }
                      ;;Compiler config gets merged with each build
                      :builds [{:id "main"
                                :source-paths ["src" "src-om"]}]}

 :pagora.revolt.task/capsule {:exclude-paths #{"test" "src/cljs"}
                             ;; :aliases [:git-deps]
                             :output-jar "dist/app.jar"
                             :capsule-type :fat
                             :main "app.core"
                             :min-java-version "1.8.0"
                             :jvm-args "-server"
                             :system-properties "ENV=prod"
                             :caplets {"MavenCapsule" [["Repositories" "central clojars(https://repo.clojars.org/)"]
                                                       ["Allow-Snapshots" "true"]]}}

 ;; plugins

 :revolt.plugin/nrepl {:port 5600}
 :pagora.revolt.plugin/nrepl-piggieback {:port 5700}

 :revolt.plugin/rebel {:init-ns "clj.user"
                       :init-banner "Welcome to the rebel.\n"}

 :revolt.plugin/watch {:on-change {:pagora.revolt.task/sass "glob:scss/*.scss"
                                   ;; :revolt.task/test "glob:**/*.clj"
                                   }}

 :revolt.plugin/figwheel {:client-print-to [:console]
                          ;; :watch-dirs ["src/clj" "src-om" "src/frontend"]
                          ;; :npm {:bundles {"dist/index.bundle.js" "src/webpack/index.js"}}
                          :builds ["main"]}}
